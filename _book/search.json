[
  {
    "objectID": "1_konsep_dasar_web.html#apa-itu-pemrograman-web",
    "href": "1_konsep_dasar_web.html#apa-itu-pemrograman-web",
    "title": "1. Konsep Dasar Web Programmming",
    "section": "Apa itu Pemrograman Web?",
    "text": "Apa itu Pemrograman Web?\nPemrograman web adalah proses menciptakan dan mengembangkan aplikasi web menggunakan bahasa pemrograman, teknologi, dan standar web.\nAplikasi web dapat diakses melalui browser web dan memungkinkan pengguna untuk berinteraksi dengan konten dan layanan yang disediakan."
  },
  {
    "objectID": "1_konsep_dasar_web.html#lingkungan-pengembangan-web",
    "href": "1_konsep_dasar_web.html#lingkungan-pengembangan-web",
    "title": "1. Konsep Dasar Web Programmming",
    "section": "Lingkungan Pengembangan Web",
    "text": "Lingkungan Pengembangan Web\n\nEditor kode\n\n\n\nVisual Studio Code\n\n\nGunakan editor teks atau lingkungan pengembangan terintegrasi (IDE) seperti Visual Studio Code, Sublime Text, atau Atom untuk menulis kode web. \n\n\nBrowser\nBerbagai browser seperti Chrome, Firefox, atau Safari digunakan untuk menguji dan melihat hasil dari halaman web yang dikembangkan. \n\n\nServer lokal\nAnda dapat menginstal server web lokal seperti Apache, Nginx, atau XAMPP untuk menguji halaman web secara lokal sebelum diunggah ke server publik.\n\n\nURL (Uniform Resource Locator)\nAlamat yang digunakan untuk mengakses halaman web. URL terdiri dari protokol (misalnya http:// atau https://), nama domain, dan path halaman.\n\n\n\nHTTP (Hypertext Transfer Protocol)\nProtokol komunikasi yang digunakan untuk mentransfer data antara klien dan server. Permintaan klien dan respons server terjadi melalui metode HTTP seperti GET, POST, PUT, dan DELETE.\n\n\n\nMarkup Languages\nMarkup languages adalah bahasa yang digunakan untuk membuat struktur dan tampilan konten dalam halaman web.\n\nHTML (HyperText Markup Language) adalah markup language yang paling umum digunakan untuk membangun struktur halaman web. XML (eXtensible Markup Language) digunakan untuk menyimpan dan mengirim data secara terstruktur.\nStruktur Dasar HTML\nMerupakan bahasa markup paling popular, disusul eXtensible Markup Language (XML). XML adalah bahasa yang digunakan untuk membuat bahasa markup lain yaitu Wireless Markup Language (WML).Bahasa markup bukan bahasa pemrograman. Oleh karena itu, penyebutan bahasa pemrograman HTML adalah kurang tepat.\nFormat Dasar HTML\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html;\ncharset=iso-8859-1\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n{ Tempat untuk coding }\n&lt;/body&gt;\n&lt;/html&gt;\n&lt; HTML &gt;\nDokumen HTML harus diawali dengan tag &lt; html &gt; dan diakhiri dengan &lt; /html &gt;memberi tahu kepada browser bahwa yang berada dalam kedua tag tersebut adalah dokumen HTML.\n&lt; HEAD &gt; Bagian header dalam dokumen HTML. Biasanya berisi judul halaman web. Bentuk secara umum:\n&lt;head&gt;\n&lt;title&gt;Judul ini akan ditampilkan pada bagian atas\nbrowser\n&lt;/title&gt;\n&lt;/head&gt;\n&lt; BODY &gt;\nBagian isi dari dokumen HTML yang dapat disisipkan teks, gambar, video maupun link. Sesuatu yang ditulis di dalam bodyakan ditampilkan pada halaman web.\nHTML Tags\nInstruksi/perintah dalam HTML disebut tag. Tag pada HTML tidak bersifat case sensitive.\n&lt;element atribut=value&gt;\nKeterangan:\n\nelement = nama tag\natribut = atribut\nvalue = nilai dari atribut Contoh:\n\n&lt;font color=red&gt;\n\nFONT merupakan element,\nCOLOR merupakan atribut,\nRED adalah value\n\n\n\n\n\n\n\nContoh HTML\n\n\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;\nHalaman Latihan 1\n&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;\nIni adalah latihan pemrograman web pertamaku.\n&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\nCSS (Cascading Style Sheets) digunakan untuk mengatur tampilan dan gaya elemen-elemen dalam halaman web.\n\n\n\nArsitektur Klien dan Server\n\n\n\nArsitektur Klien dan Server\n\n\nPada pemrograman web, arsitektur klien dan server digunakan. Klien (misalnya browser web) mengirimkan permintaan ke server, dan server merespons dengan mengirimkan halaman web yang diminta.\nKlien menginterpretasikan halaman web menggunakan HTML, CSS, dan JavaScript, sementara server mengurus pemrosesan data dan logika di balik halaman.\n\n\n\nDatabase\n\n\n\nDatabase MySQL\n\n\nDBMS atau Database Management System digunakan untuk menyimpan dan mengelola data dalam aplikasi web. Beberapa sistem database yang umum digunakan termasuk MySQL, PostgreSQL, MongoDB, dan Oracle. Pemahaman tentang database meliputi pembuatan tabel dan relasi antar tabel, manipulasi data dengan menggunakan bahasa query seperti SQL, dan pengoptimalan kinerja database\n\n\n\nFramework\n\n\n\n\n\n\nLaravel\n\n\n\n\n\n\n\nBootstrap\n\n\n\n\n\nFramework adalah kerangka kerja perangkat lunak yang menyediakan struktur, komponen, dan alat bantu untuk membangun aplikasi web dengan lebih cepat dan efisien. Framework menyediakan aturan dan konvensi yang konsisten, menyederhanakan tugas umum, jika seperti routing, validasi data, interaksi dengan database, dan lainnya. Dalam pemrograman web khsusnya dengan menggunakan bahasa pemrograman php yang populer termasuk Laravel dan CodeIgniter. Dalam pemrograman web,\n\n\n\nWeb Servers\n\n\n\nApache Server\n\n\nWeb server adalah perangkat lunak yang mengelola permintaan dari browser dan mengirimkan halaman web ke pengguna melalui protokol HTTP. Beberapa server web yang umum digunakan adalah Apache, Nginx, dan IIS (Internet Information Services). Pemahaman tentang konfigurasi server web, manajemen domain, dan penanganan permintaan HTTP penting dalam pengembangan web.\n\n\n\nVersion Control\nVersion control adalah metode untuk melacak perubahan kode sumber selama pengembangan aplikasi. Git adalah sistem version control yang populer yang memungkinkan pengembang untuk bekerja secara kolaboratif, membuat cabang (branch), menggabungkan perubahan (merge), dan melakukan pemulihan (revert) jika terjadi kesalahan. Version control membantu dalam manajemen kode, pengendalian versi, dan kolaborasi tim.\n\n\n\nResposive Web Design\nResponsive web design adalah pendekatan desain web yang memastikan tampilan dan pengalaman pengguna yang optimal di berbagai perangkat dan ukuran layar. Ini melibatkan penggunaan teknik seperti media queries, flexible grids, dan CSS frameworks (seperti Bootstrap atau Foundation) untuk mengatur tata letak dan tampilan halaman web secara responsif.\n\n\n\nTesting and Debugging\nTesting dan debugging adalah proses penting dalam pengembangan web untuk memastikan aplikasi berfungsi dengan baik dan bebas dari kesalahan. Testing adalah proses verifikasi dan validasi untuk memastikan bahwa aplikasi web berfungsi sesuai dengan yang diharapkan dan memenuhi persyaratan bisnis yang telah ditetapkan. Tujuan dari testing adalah untuk menemukan bug atau kesalahan dalam aplikasi sebelum dirilis ke pengguna akhir. Debugging adalah proses untuk menemukan, mendiagnosis, dan memperbaiki bug atau kesalahan dalam kode aplikasi web.\n\n\n\nAPI (Application Programming Interface)\nAPI adalah antarmuka yang memungkinkan aplikasi web berkomunikasi dan berbagi data dengan aplikasi atau layanan lain. RESTful API adalah pendekatan populer untuk mengembangkan API yang menggunakan protokol HTTP dan standar seperti JSON atau XML untuk bertukar data."
  },
  {
    "objectID": "1_konsep_dasar_web.html#php-hypertext-preprocessor",
    "href": "1_konsep_dasar_web.html#php-hypertext-preprocessor",
    "title": "1. Konsep Dasar Web Programmming",
    "section": "PHP (Hypertext Preprocessor)",
    "text": "PHP (Hypertext Preprocessor)\nPHP adalah bahasa pemrograman server-side yang populer untuk pengembangan web. PHP digunakan untuk memproses permintaan dari klien, mengakses basis data, dan menghasilkan respons yang dikirimkan kembali ke klien.\n\nMemulai PHP\nSetiap memulai kode php selalu diawali dengan &lt;?php dan ditutup dengan ?&gt; \n&lt;?php\n    $kata = \"Hello World!\"\n    echo \"$kata\"; // Output: Hello World!\n?&gt;\nMenggunakan echo untuk print\nDalam variabel php menggunakan tanda $ ($variable) untuk inisialisasi variabel\n\n\nPHP - Kondisional\nKondisional dalam bahasa pemrograman adalah proses yang berfungsi untuk menentukan blok instruksi akan dieksekusi atau tidak, tergantung pada kondisinya sendiri seperti nilainya sudah benar (True) atau belum (False). Ada beberapa jenis percabangan yaitu if-else, switch case dll.\n$angka = -5;\nif($angka &lt; 0){\n    echo 'Angka negatif';\n} else {\n    echo'Angka positif ';\n};\n//Output : Angka Negatif\n$input = 3;\nswitch($input){\n    case \"1\":\n    echo\"Inputan adalah satu\";\n    break;\n    case \"2\":\n    echo\"Inputan adalah dua\";\n    break;\n    case \"3\":\n    echo\"Inputan adalah tiga\";\n    break;\n    default:\n    echo\"Tidak ada input yang cocok dengan pilihan anda.\";\n    }\n    /* Output: Inputan adalah tiga\n    Jika nilai dari variable `$input` bukan sama dengan `case`,\n    maka akan menampilkan pesan “Tidak ada input yang cocok\n    */\n\n\n\nPHP – isset dan empty\nFungsi isset digunakan untuk memeriksa apakah suatu variabel telah diatur atau tidak. Sintaks fungsi ini sebagai berikut:\n$nama = \"Bengkel Koding\";\nif(isset($nama)){\n    print(\"Nama telah diatur\");\n} else {\n    print(\"Nama belum diatur\")\n}\n// output : Nama telah diatur\n\nFungsi empty digunakan untuk memeriksa apakah suatu variabel kosong atau tidak. Sintaks fungsi ini sebagai berikut:\n$nama = \"\";\nif(empty($nama)) {\n    print(\"nama kosong\");\n} else {\n    print(\"nama tidak kosong\");\n}\n// output : Nama kosong\n\n\n\nPHP - Looping\nPerulangan pada php terdapat beberapa fungsi yang dapat digunakan, diantaranya adalah for, while, do while, dan foreach\n\nLooping For\nLooping For adalah salah satu looping statement pada bahasa pemrograman php, yang memiliki sintaks seperti for (expression1; expression2; expression3) {} dimana expression 1 merupakan awal dari pengulangan, expression 2 menentukan kondisi yang harus terpenuhi agar perintah d iterasi lebih lanjut, sedangkan expresion 3 mengubah nilai variable dalam setiap iterasinya.\nContoh Penggunaannya:\nfor ($i=0;$i&lt;=5;$i++){\necho \"$i \";\n}\n// Output: 0 1 2 3 4 5\nDalam contoh diatas, nilai x mulai dari angka 0 dan terus ditambah sampai batas yaitu &lt;=5. Setelah itu akan di eksekusi dengan cara mencetak isi value dari x ke layar.\n\n\nWhile\nLooping while juga ada didalam bahasa pemograman PHP, sintaksnya sama tapi bedanya hanya bisa melakukan looping selama kondisinya benar/true.\nContohnya:\n$x = 0; //awal variabel $x\nwhile($x &lt;= 5){\necho \"$x \";\n$x++;\n}\n// Output : 0 1 2 3 4 5\n\n\nDo While\nPerulangan do-while adalah perintah yang digunakan untuk mengulang suatu proses terhadap nilai kondisional (expression) saat awal loop dilanjutkan dengan evaluasi ulang pada akhir setiap iterasi.\nSintaks nya adalah sebagai berikut:\n$i = 1;\ndo{\n    echo $i;\n    $i++;\n} while ($i &lt;= 5);\n// Output : 0 1 2 3 4 5\n\n\nForeach\nForeach merupakan perintah yang digunakan untuk mengiterasi set data array dalam bahasa pemrograman php. Sintaks nya seperti ini:\n$buah = array(\"Apel\", \"Jeruk\", \"Mangga\", \"Pisang\");\nforeach ($buah as $item) :\n    echo $item . \"\\n\";\nendforeach;\n/* output : \napel\njeruk\nmangga\npisang\n*/\nSelain menggnakan endforeach bisa juga menggunakan kurung kurawal {}\n$buah = array(\"Apel\", \"Jeruk\", \"Mangga\", \"Pisang\");\nforeach ($buah as $item) {\n    echo $item . \"\\n\";\n}\n/* output : \napel\njeruk\nmangga\npisang\n*/\n\n\n\nInclude - Require\nFungsi-fungsi ini digunakan untuk menyisipkan (include) atau memasukkan (require) file PHP eksternal ke dalam file PHP yang sedang aktif. Berguna untuk mengorganisir kode secara modular."
  },
  {
    "objectID": "konsep.html",
    "href": "konsep.html",
    "title": "Konsep",
    "section": "",
    "text": "Terdapat beberapa konsep dasar yang perlu dipelajari untuk dapat memahami apa itu pemrograman web. Berikut adalah materi-materi yang perlu dipahami:\n\nKonsep dasar web  Menjelaskan konsep dasar atau materi pengantar dari pemrograman web.\nPengenalan tools  Installasi dan penjelasan mengenai tools-tools yang digunakan.\nResponsive web  materi dasar dari responsive web dan style dari Bootstrap.\nFront Page  Mengembangkan web yang responsive menggunakan framework CSS dari Bootstrap\nDatabase  Konsep dan dasar-dasar dari database menggunakan mysql.\nPraktik Database  Mengembangkan pemahaman dari database dengan praktik database dari studi kasus To Do List.\nPengujian Web  Melakukan pengujian sederhana dengan dengan menggunakan fitur developer pada browser."
  },
  {
    "objectID": "2_pengenalan_tools.html#teks-editor",
    "href": "2_pengenalan_tools.html#teks-editor",
    "title": "2. Pengenalan Tools",
    "section": "Teks Editor",
    "text": "Teks Editor\nBanyak pilihan untuk teks editor yang dapat digunakan, seperti Notepad++, Sublime Text, dan Visual Studio Code. \nVisual Studio Code \nTeks Editor yang umum digunakan saat ini adalah Visual Studio Code. Untuk melakukan instalasi Visual Studio Code silah ikuti langkah-langkah berikut: \n\nSilahkan download file installer dari Visual Studio Code. Klik download pada halaman web Visual Studio Code sesuai dengan sistem operasi yang digunakan.\n\n\n\n\nLaman VSCode\n\n\n\nSetelah selesai download, klik dua kali pada file installer.\nJika muncul peringatan Run as Administrator, klik Yes.\nKemudian akan tampil window Installer Microsoft Visual Studio Code. Untuk menyetujui License Agreement, pilih “I accept the agreement” lalu next.\n\n\n\n\nLicense Agreement VS Code\n\n\n\nLalu pilih lokasi instalasinya. Jika ingin menggunakan lokasi default dapat langsung klik next.\n\n\n\n\nLokasi instalasi VS Code\n\n\n\nMemilih lokasi shortcuts program. Jika ingin menggunakan default dapat langsung klik next.\nPada bagian Select Additional Tasks, terdapat beberapa tasks yang bisa diinstall atau tidak. Untuk memudahkan ketika membuka file melalui berkas atau explorer dapat dipilih semua dan klik next.\nKlik install dan jalankan Visual Studio Code\n\n\n\n\nvscode\n\n\n\n\n\n\n\n\nIntalasi Visual Studio Code"
  },
  {
    "objectID": "2_pengenalan_tools.html#web-browser",
    "href": "2_pengenalan_tools.html#web-browser",
    "title": "2. Pengenalan Tools",
    "section": "Web Browser",
    "text": "Web Browser\nWeb browser adalah perangkat lunak yang awalnya dirancang untuk menampilkan dokumen web/HTML. Namun, pada saat ini, web browser harus memiliki kemampuan untuk menginterpretasikan dan menjalankan JavaScript atau VBScript, menjalankan Java Applet, memahami dokumen XML, dan menjalankan dokumen khusus dengan menggunakan fasilitas plugin seperti file .swf Macromedia Flash, dan lain sebagainya. \nBanyak web browser yang dapat digunakan, dan paling umum digunakan adalah Google Chrome dan Mozilla Firefox atau dapat menggunakan web browser yang tersedia pada laptop atau pc yang digunakan seperti safari atau microsoft edge. \n\n\n\n\n\n\nChrome\n\n\n\n\n \n\n\n\n\n\nMozilla Firefox"
  },
  {
    "objectID": "2_pengenalan_tools.html#web-server",
    "href": "2_pengenalan_tools.html#web-server",
    "title": "2. Pengenalan Tools",
    "section": "Web Server",
    "text": "Web Server\nWeb Server adalah server HTTP yang bertugas menyediakan dokumen yang diminta oleh web browser. Saat ini, web server telah berkembang menjadi lebih kompleks karena harus melayani banyak fungsi dan bahkan menjadi pusat layanan-layanan lain. \nWeb server juga menjadi komponen yang sangat penting dalam application server. Sebagai server HTTP, web server harus dapat menangani permintaan dokumen yang diberikan oleh web browser dan juga harus bisa dikonfigurasi untuk berinteraksi dengan program-program seperti JSP, ASP, PHP, melalui CGI, dan sebagainya. Contoh-contoh web server yang populer antara lain Apache dan IIS (Internet Information Service). \nXAMPP \nXAMPP adalah sebuah web server open source yang dapat berjalan diberbagai sistem operasi seperti Windows, Linux, dan MacOS. \nXAMPP menyediakan semua komponen yang diperlukan untuk mengelola sebuah website, termasuk Apache, MySQL/MariaDB, PHP, dan Perl. XAMPP dapat digunakan untuk membuat web server lokal di komputer. \nUntuk menginstall XAMPP ikuti langkah-langkah berikut: \n\nUnduh file installer dari website XAMPP. Unduh sesuai dengan sistem operasi atau komputer yang digunakan. \n\n\n\n\nWeb XAMPP\n\n\n\nLakukan instalasi XAMPP sesuai panduan (wizard) yang ditampilkan dan pilih Yes untuk melanjutkan instalasi. Bila ada pesan error biarkan saja. \n\n\n\n\nPesan error\n\n\n\nPilih komponen yang Anda butuhkan dalam instalasi tersebut. Sebagai contoh, centang MySQL dan phpMyAdmin.\nTentukan direktori instalasi yang tepat, misalnya C:\\xampp.\nLanjutkan tahapan dan klik install.\n\n Untuk melihat konfigurasi php dapat membuka config pada baris apache lalu membuka php.ini \n\n\n\nApache Config\n\n\nCek versi php dan ekstensi lain dengan cara membuat file “info.php” yang isinya &lt;?php phpinfo(); ?&gt;, letakkan pada C:\\xampp\\htdocs. Lalu buka localhost/info.php pada browser\n\n\n\n\n\n\nInstalasi Xampp"
  },
  {
    "objectID": "2_pengenalan_tools.html#bootstrap",
    "href": "2_pengenalan_tools.html#bootstrap",
    "title": "2. Pengenalan Tools",
    "section": "Bootstrap",
    "text": "Bootstrap\nBootstrap adalah sebuah kerangka kerja (framework) front-end yang populer untuk pengembangan desain web responsif (responsive web design). Dikembangkan oleh tim Twitter, Bootstrap menyediakan serangkaian komponen dan gaya CSS yang dapat digunakan untuk membangun tampilan web yang konsisten, menarik, dan responsif secara cepat. Sampai dengan modul ini dibuat, Bootstrap telah mengalami pembaruan Bootstrap versi 5.\n\n\n\n\nBootstrap\n\n\n\nCara instalasi Bootstrap \n\nBuka halaman resmi Bootstrap di https://getbootstrap.com.\nDi halaman utama, Anda akan melihat tombol “Download” di bagian bawah. Klik tombol tersebut untuk mengunduh file Bootstrap. \n\n\n\n\n\n\n\nTampilan Halaman Bootstrap\n\n\n\n\n \n\n\n\n\n\nDownload Paket Bootstrap\n\n\n\n\n\n\nSetelah selesai mengunduh, ekstrak file zip Bootstrap yang telah diunduh ke direktori proyek web Anda. \n\n\n\n\nEkstrak File\n\n\n\nDi dalam direktori proyek, buatlah folder baru (misalnya “css” dan “js”) untuk menyimpan file CSS dan JavaScript Bootstrap. \n\n\n\n\nEkstrak File\n\n\n\nSalin file bootstrap.min.css yang ada di dalam direktori “dist/css” dalam file Bootstrap yang telah diekstrak, ke dalam folder “css” di dalam direktori proyek Anda.\nSalin file bootstrap.min.js yang ada di dalam direktori “dist/js” dalam file Bootstrap yang telah diekstrak, ke dalam folder “js” di dalam direktori proyek Anda.\nSetelah itu, Anda dapat menggunakan Bootstrap dengan menautkan file CSS dan JavaScript ke dalam halaman HTML Anda. Dalam elemen &lt;head&gt; dari file HTML, tambahkan tag link berikut untuk menautkan file CSS Bootstrap: \n\n&lt;link rel=\"stylesheet\" href=\"css/bootstrap.min.css\"&gt;\n\nJuga di dalam elemen &lt;body&gt; atau sebelum penutup tag &lt;/body&gt; dalam file HTML, tambahkan tag script berikut untuk menautkan file JavaScript Bootstrap: \n\n&lt;script src=\"js/bootstrap.min.js\"&gt;&lt;/script&gt; \n\nSekarang, Anda dapat menggunakan kelas-kelas, komponen, dan gaya Bootstrap dalam halaman web Anda.Sekarang, Anda dapat menggunakan kelas-kelas, komponen, dan gaya Bootstrap dalam halaman web Anda.\n\n\n\n\n\n\n\nInstalasi Bootstrap\n\n\n\nBerikut adalah penjelasan mengenai instalasi bootstrap!"
  },
  {
    "objectID": "3_responsive_web.html#pengenalan-responsive-web-design",
    "href": "3_responsive_web.html#pengenalan-responsive-web-design",
    "title": "3. Responsive Web Design",
    "section": "Pengenalan Responsive Web Design",
    "text": "Pengenalan Responsive Web Design\nDesain Web Responsif (Responsive Web Design) merupakan penggunaan HTML dan CSS untuk dapat mengubah ukuran, menyembunyikan, mengecilkan, atau memperbesar situs web secara otomatis, agar dapat terlihat bagus pada semua perangkat (desktop, tablet, dan handphone). \n\n\n\nResponsive Web\n\n\n\nHalaman web responsive dilakukan dengan menambahkan elemen meta pada dokumen HTML seperti berikut: \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\nPenambahan elemen meta digunakan untuk mengatur viewport pada dokumen HTML sehingga dapat tampil lintas perangkat. Pada penambahan elemen meta tersebut juga akan memberikan instruksi ke web browser dalam mengatur dimensi dan skala halaman web. \nResponsive pada Image \nPenerapan responsive dapat diberlakukan juga pada image dengan menambahkan atribut width dengan nilai 100%. \n&lt;img src=\"images.jpg\" style=\"width:100%;\"&gt;\nResponsive pada Text \nResponsive pada text dapat diterapkan dengan menggunakan unit “vw”, yang berarti “viewport width” atau “lebar viewport”.Viewport adalah ukuran jendela browser. 1 vw adalah 1% dari lebar viewport. Jika viewport lebar 50cm, 1vw adalah 0,5cm. \n&lt;h1 style=\"font-size:10vw\"&gt;Hello World&lt;/h1&gt;"
  },
  {
    "objectID": "3_responsive_web.html#responsive-web-design-framework-bootstrap",
    "href": "3_responsive_web.html#responsive-web-design-framework-bootstrap",
    "title": "3. Responsive Web Design",
    "section": "Responsive Web Design Framework (Bootstrap)",
    "text": "Responsive Web Design Framework (Bootstrap)\nBootstrap merupakan HTML, CSS dan Javascript framework paling popular untuk mengambangkan responsive web design yang mengutamakan tampilan mobile (mobile first) Bootstrap dapat diunduh secara gratis pada laman https://getbootstrap.com/. Sampai saat modul ini dibuat versi terakhir adalah Bootstrap v5.3.\n\nMengapa menggunakan Bootstrap?\nBanyak keuntungan dan kemudahan yang diberikan Bootstrap diantaranya adalah: \nBerikut adalah beberapa penjelasan mengenai Bootstrap: \n\nResponsif: Salah satu fitur utama Bootstrap adalah kemampuannya untuk menghasilkan tampilan yang responsif secara otomatis. Dengan menggunakan class CSS yang telah disediakan oleh Bootstrap, elemen-elemen halaman web dapat menyesuaikan diri dengan baik pada berbagai perangkat dan ukuran layar, mulai dari desktop hingga perangkat mobile.\nGrid System: Bootstrap menyediakan sistem grid yang fleksibel untuk membagi layout halaman web menjadi kolom-kolom yang responsif. Grid system ini memungkinkan pengaturan layout yang mudah dan dapat diatur untuk menciptakan tampilan yang rapi dan terstruktur pada berbagai perangkat.\nKomponen Siap Pakai: Bootstrap menyediakan beragam komponen UI siap pakai seperti tombol, navigasi, formulir, jumbotron, kartu, jendela modal, dan banyak lagi. Komponen ini telah dirancang dengan baik dan dapat langsung digunakan dalam proyek tanpa perlu memikirkan desain atau gaya dasar, menghemat waktu dan usaha pengembangan.\nGaya dan Tema: Bootstrap memiliki gaya dan tema default yang estetis dan modern. Selain itu, Bootstrap juga menyediakan beragam tema kustom yang dapat diterapkan dengan mudah untuk memberikan tampilan yang unik dan sesuai dengan kebutuhan proyek Anda. Anda juga dapat menyesuaikan gaya dan tema Bootstrap sesuai dengan preferensi Anda sendiri.\nKompatibilitas Browser: Bootstrap dirancang untuk mendukung sebagian besar browser modern. Ini berarti tampilan dan fungsionalitas situs web yang dibangun dengan menggunakan Bootstrap akan konsisten dan berfungsi dengan baik di berbagai browser yang umum digunakan.\nDokumentasi dan Komunitas: Bootstrap memiliki dokumentasi yang sangat baik, lengkap dengan contoh-contoh kode dan penjelasan yang rinci. Selain itu, karena popularitasnya, Bootstrap memiliki komunitas pengembang yang besar dan aktif, yang dapat memberikan dukungan dan sumber daya yang berguna untuk menjawab pertanyaan, memecahkan masalah, dan berbagi pengalaman.\n\n\n\n\nHTML5\nPenambahan doctype dilakukan untuk menetapkan dokumen HTML sebagai HTML versi 5 (HTML5), agar dapat menggunakan elemen-elemen HTML5 dan properti CSS Bootstrap. Sebagai contohnya pada script berikut. \n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;/html&gt;\n\nJika menggunakan Text Editor Visual Studio Code, ketika mengetikan html di awal kode maka akan muncul snippets yang memunculkan beberapa pilihan template kode \n\n\n\nSnippets\n\n\n\n\nGrid System\nPada Bootstrap menerapkan grid system dengan 12 (dua belas) kolom pada setiap halaman. Jika kita tidak menginginkan layout menggunakan ke-12 kolom, kita bisa mengelompokkan kolom bersama untuk membuat kolom yang lebih lebar. Sebagai contoh gambaran dari grid system dengan 12 kolom ditampilkan seperti pada gambar di bawah ini. \n\n\n\nContoh Grid System Bootstrap\n\n\n Sistem grid pada bootstrap dapat menyesuaikan terhadap enam keadaan atau ukuran diantaranya adalah : \n\nEkstra kecil atau extra small (xs)\nKecil atau small (sm)\nSedang atau medium (md)\nBesar atau large (lg)\nEkstra besar atau extra large (xl)\nEkstra ekstra besar atau extra extra large (xxl) \n\n\n\n\nTabel Breakpoint Grid\n\n\n\n\nFungsi Bootsrtap yang umum digunakan\n\nGrid  Seperti yang telah dijelaskan pada Grid System, bahwa pada bootstrap dapat mengelompokkan layout menjadi 12 kolom, dimana kita dapat menggunakan grid ini dengan kelas row yang didalamnya terdapat kelas col, seperti berikut:\n&lt;div class=\"row\"&gt;\n    &lt;div class=\"col\"&gt;&lt;/div&gt;\n    ...\n&lt;/div&gt;&lt;!-- row--&gt;\n Dalam kelas col ini dapat dituliskan dengan value seperti col-4, yang artinya objek yang diberikan kelas tersebut pada row atau baris akan mengisi sebanyak 4 kolom. Dalam 1 row tersebut dapat berisi dengan akumulai 12 kolom.  Selain iitu juga bisa dikombinasikan dengan class breakpoint. Pada seperti yang dijelaskan pada tabel penjelasan grid system bahwa kolom akan mengikuti ukuran breakppoint dari device yang dimasukkan. Misalkan col-md-4, maka ketika ukuran dari device yang digunakan lebih besar dari atau sama dengan 768px maka tampilan kolom akan mendatar memenuhi row, namun akan berubah tampilannya jika ukuran devicenya berkurang 1 pixel saja (kurang dari 768px).\nWarna  Terdapat beberapa template kelas warna yang disediakan oleh Bootstrap diantaranya \n\nPrimary: (Biru tua)\nSecondary: (Abu-abu)\nSuccess: (Hijau)\nDanger: (Merah)\nWarning: (Kuning)\nInfo: (Biru cerah)\nLight: (Putih atau hampir putih)\nDark: (Hitam atau hampir hitam) \n\nPemilihan warna juga merupakan hal yang sangat penting dan perlu diperhatikan.Pemilihan warna akan sangat berpengaruh pada tampilan atau UI sehingga akan mempercantik tampilan dan menarik bagi user. Selain itu dengan warna yang sesuai akan membantu menyampaikan fungsi dari fitur, misalnya merah menandakan suatu yang penting yang memerlukan perhatian lebih, hal tersebut akan memudahkan konsumen dalam menggunakan aplikasi atau disebut user experience\nTypografi  Dalam cara penulisan pada bootstrap memberikan kemudahan dalam mengatur tampilan teks, melalui beberapa class, seperti \n\nHeading, selain menggunakan tag &lt;h1&gt;,&lt;h2&gt;,..,&lt;h6&gt; pada bootstrap juga terdapat kelas heading contohnya:\n&lt;p class=\"h1\"&gt;Heading 1&lt;p&gt;\nDisplay, dengan manambahkan class display pada teks akan memberikan tampilan teks yang besar namun dengan style font yang tipis, misalnya: \n&lt;p class=\"display-1\"&gt;Display 1&lt;/p&gt;\nFont Size, class font size atau yang ditulis fs memberikan styling berupa ukuran dari teks dimana semakin besar nilai fs akan semakin kecil font yang ditampilkan: \n&lt;p class=\"fs-1\"&gt;ini teks&lt;/p&gt;\nFont Weight, melalui font weight dapat memberikan pengaturan terhadap tebal tipis dari font atau teks, dengan parameter bolder, bold, light, lighter, dan normal, berikut contoh penggunaannya: \n&lt;p class=\"fw-bold\"&gt;Ini tebal&lt;/p&gt;\nFont Style, dengan font style kita dapat merubah style dari font atau teks bold dan italic tanpa menggunakan tag html &lt;b&gt; dan &lt;i&gt;, atau sebagai berikut: \n&lt;p class=\"fst-italic\"&gt;ini font style&lt;/p&gt;\n&lt;p class=\"fst-normal\"&gt;ini font style&lt;/p&gt;\n\nSpacing & Sizing \nPengaturan Spasi dan ukuran pada Bootstrap dapat menggunakan padding dan margin, Padding merupakan bagian yang membatasi konten dengan border, sedangkan margin merupakkan bagian yang membatasi antara border dengan bagian luar dari konten. Pengaturan margin dan padding dapat dilakukan dengan mudah hanya dengan menambahkan class m untuk margin dan p untuk padding yang diikuti dengan parameter t (top), b (bottom), s (start), e (end), x (menambahkan pada kedua sis horizontal), y (menambahkan pada kedua sisi vertikal), serta diikuti oleh besar margin atau padding yang diinginkan dengan nilai mulai dari 1 hingga 5, atau seperti berikut:\n ```html\n &lt;!-- Heading --&gt;\n &lt;div class=\"item mt-5 mb-3\"&gt;item1&lt;/div&gt;\n &lt;div class=\"item ms-2 me-3\"&gt;item2&lt;/div&gt;\n &lt;div class=\"item my-5\"&gt;item3&lt;/div&gt;\n &lt;div class=\"item mx-3\"&gt;item4&lt;/div&gt;\n &lt;div class=\"item m-3\"&gt;item4&lt;/div&gt;\n\n &lt;!-- Padding --&gt;\n &lt;div class=\"item pt-5 pb-3\"&gt;item1&lt;/div&gt;\n &lt;div class=\"item ps-2 pe-3\"&gt;item2&lt;/div&gt;\n &lt;div class=\"item py-5\"&gt;item3&lt;/div&gt;\n &lt;div class=\"item px-3\"&gt;item4&lt;/div&gt;\n &lt;div class=\"item p-3\"&gt;item4&lt;/div&gt;\n ```\n\n\n\n\nMargin-Padding-Border\n\n\n\n\n\nKomponen yang umum digunakan\n\nNavbar Navbar pada bootstrap sudah memiliki kemampuan untuk responsif ketika ukuran dari perangkat yang digunakan terlalu kecil untuk menampilkan konten atau menu didalamnya akan otomatis menjadi humberger menu, berikut salah satu contoh dokumentasi navbar yang umum digunakan.\n\n\n\n\nNavbar\n\n\n\nTable Pada class yang disediakan bootstrap terdapat beberapa pilihan tampilan table dan modifikasi yang diberikan, dengan memasukkan tag table ke dalam div yang diberikan kelas dari table yang diinginkan misalnya seperti berikut :\n\n\n\n\nTable\n\n\n\nButton Tombol merupakan bagian terpenting dalam suatu tampilan website yang dapat mengirimkan input dari pengguna ke server. Dalam bootstrap terdapat beberapa variasi yang diberikan untuk penggunaan tombol atau button misalnya warna, bentuk, style, rounded dan masih banyak lagi yang bisa didalami melalui dokumentasi yang ada pada halaman bootstrap\n\n\n\n\nButton\n\n\n\nCard Pada website blog atau e-commerce biasanya menampilkan artikel-artikel mereka pada card dapat menampilkan gambar, serta deskripsi atau tombol untuk melihat lebih banyak mengenai informasi dari blog tersebut. berikut adalah contoh penggunaan card:\n\n\n\n\nCard\n\n\n\n\n\n\n\n\n\n\nResponsive design menggunakan Bootstrap\n\n\n\nBerikut penjelasan mengenai penggunaan bootstrap dan elemen-elemen yang banyak digunakan!"
  },
  {
    "objectID": "4_pembuatan_front_page.html#desain-front-page",
    "href": "4_pembuatan_front_page.html#desain-front-page",
    "title": "4. Front Page",
    "section": "Desain Front Page",
    "text": "Desain Front Page\n\n\n\nDesain Front Page\n\n\n Dalam modul Junior Web Developer ini hanya membuat front page sederhana yaitu mengenai To Do List, dimana tahapan yang dilakukan adalah membuat desain, menentukan tata letak, dan bagian-bagian didalamnya. Dari desain tata letak di atas terdapat beberapa komponen yang digunakan, yaitu Header, Form, Table, dan Button. Untuk pembuatan tampilan atau UI menggunakan framework Bootstrap."
  },
  {
    "objectID": "4_pembuatan_front_page.html#membuat-front-page",
    "href": "4_pembuatan_front_page.html#membuat-front-page",
    "title": "4. Front Page",
    "section": "Membuat Front Page",
    "text": "Membuat Front Page\n\nMembuat Folder dan File Projek\nPada pembiatan frontpage ini karena belum berhubungan dengan database, dapat membuat folder atau file projek diluar folder xampp dan kita bisa membuat file dalam format html.\n\n\nMemulai HTML\nPada pengenalan tools telah dijelaskan mengenai instalasi bootstrap. Telah diketahui komponen-komponen yang digunakan, yaitu Header, Form, Table, dan Button yang dapat langsung dicari kelas-kelasnya di dokumentasi bootstrap. \nMemulai dengan kode html5 serta menambahkan tag meta dengan name=“viewport” untuk membuat web yang responsif, selain itu juga melakukan instalasi css hingga javascript. \n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, \n    initial-scale=1.0\"&gt;\n\n    &lt;!-- Bootstrap offline sesuai lokasi file disimpan --&gt;\n    &lt;link rel=\"stylesheet\" href=\"assets/css/bootstrap.css\"&gt; \n\n    &lt;!-- Bootstrap Online --&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"&gt;   &lt;!-- Gunakan salah satu cara saja --&gt;\n    \n    &lt;title&gt;To Do List&lt;/title&gt;   &lt;!--Judul Halaman--&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;!-- Load js secara offline sesuai lokasi file disimpan --&gt;\n    &lt;script src=\"js/bootstrap.bundle.js\"&gt;&lt;/script&gt; \n    &lt;!-- Load JS online --&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;   \n    &lt;!-- cukup gunakan salah satu saja --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nPada vscode ketika menuliskan html maka akan muncul pilihan template html yang akan digunakan, pada kode diatas menggunakan html5. Seperti yang telah dipelajari sebelumnya mengenai framework bootstrap, perlu memuat file bootstrap. Jika dalam menjalankan program selalu terhubung dengan internet dapat memuat css maupun js bootstrap dapat diakses pada halaman dokumentasi bootstrap bagian introduction. Namun jika dalam keadaan jarang terhubung internet maka dapat mengunduh terlebih dahulu file bootstrap lalu dapat meng-export-nya dan membuat folder assets pada lokasi folder projek untuk menyimpan file paket dari bootstrap. \nPada body diisikan konten yang ingin ditampilkan, yaitu judul, form, tabel, dan button. Untuk menggunakan framework pada komponen tersebut dapat melihat pada halaman docs bootstrap untuk melihat dokumentasi dari penggunaan bootstrap lalu cari dokumentasi komponen yang ingin digunakan. Pilih dokumentasi yang sesuai dan modifikasi sesuai dengan kebutuhan yang ingin digunakan. \n&lt;div class=\"container mt-3\"&gt;\n...\n&lt;/div&gt;\n Pada tampilan web kita ingin memusatkan dan mengelompokkan konten utama, maka digunakan container selain itu agar terdapat jarak antara konten dan tepi atas browser ditambahkan class “mt-3”. \n\n\nJudul (heading)\n\n\n\nHeading\n\n\n&lt;h3&gt;\n    To Do List\n    &lt;small class=\"text-muted\"&gt;\n        Catat semua hal yang akan kamu kerjakan disini.\n    &lt;/small&gt;\n&lt;/h3&gt;\n&lt;hr&gt;    \n\nMenampilkan judul dapat menggunakan heading 1 hingga 6 atau dengan tag &lt;p&gt; yang diberikan class “h1” - “h6”. Semakin besar angka heading maka akan semakin kecil ukuran dari teks yang akan ditampilkan. \nPada judul menampilkan kalimat “To Do List” sebagai kalimat utama dan “Catat semua hal yang akan kamu kerjakan” sebagai slogan atau kalimat penjelas sehingga pada slogan tersebut dimasukkan kedalam tag small dengan class text-muted untuk mengecilkan huruf dan memberikan warna seakan redup karena teks tersebut memiliki tingkat kepentingan lebih rendah.\n\n\n\nForm\n\n\n\nForm\n\n\n &lt;!-- Form --&gt;\n\n&lt;form class=\"form row\" method=\"POST\" action=\"\" name=\"myForm\"\"&gt;\n    &lt;div class=\"col mb-2\"&gt;\n        &lt;label for=\"inputIsi\" class=\"form-label fw-bold\"&gt;\n        Kegiatan\n        &lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" name=\"isi\" id=\"inputIsi\" placeholder=\"Kegiatan\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col mb-2\"&gt;\n        &lt;label for=\"inputTanggalAwal\" class=\"form-label fw-bold\"&gt;\n        Tanggal Awal\n        &lt;/label&gt;\n        &lt;input type=\"date\" class=\"form-control\" name=\"tgl_awal\" id=\"inputTanggalAwal\" placeholder=\"Tanggal Awal\"&gt;\n    &lt;/div&gt;\n        &lt;div class=\"col mb-2\"&gt;\n        &lt;label for=\"inputTanggalAkhir\" class=\"form-label fw-bold\"&gt;\n        Tanggal Akhir\n        &lt;/label&gt;\n        &lt;input type=\"date\" class=\"form-control\" name=\"tgl_akhir\" id=\"inputTanggalAkhir\" placeholder=\"Tanggal Akhir\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col mb-2 d-flex\"&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary rounded-pill px-3 mt-auto\" \n    name=\"simpan\"&gt;Simpan&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n\nTerdapat tiga input pada form, yaitu kegiatan, tanggal awal, dan tanggal akhir. Namun pada database terdapat field id yang diatur dengan auto increment sehingga akan terisi otomatis sesuai urutan data disimpan. pada bootstrap v5 untuk membuat form dalam satu baris atau secara inline dapat menggunakan grid, yaitu dengan kelas “row” pada form dan “col” pada pembungkus div dari form hingga button. Pastikan for pada label dan id pada input sama agar ketika label diklik akan membuat form input itu aktif. Pada form input akan menampilkan placeholder keterangan sesuai inputan form. \nSelain form juga terdapat button yang bertipe submit dengan kelas dari btn, btn-primary untuk memberikan warna biru atau dapat memberi variasi lain yang sesuai dengan btn-(kode warna yang ada pada dokumentasi bootstrap). Dalam pemilihan warna pada tombol harus disesuaikan dengan user experience. Selain itu pada div pembungkus button diberikan class d-flex agar div dari button bersifat flexible sehingga posisi button dapat diatur.\n\n\n\nTabel\n {style=“text-align: center;”}\n&lt;table class=\"table table-hover\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th scope=\"col\"&gt;#&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Kegiatan&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Awal&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Akhir&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Status&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Aksi&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;th&gt;1&lt;/th&gt;\n            &lt;td&gt;Meeting dengan Unit Keuangan&lt;/td&gt;\n            &lt;td&gt;2023-05-10&lt;/td&gt;\n            &lt;td&gt;2023-05-11&lt;/td&gt;\n            &lt;td&gt;\n                &lt;a class=\"btn btn-warning rounded-pill px-3\" type=\"button\" \n                href=\"#\"&gt;Belum&lt;/a&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;a class=\"btn btn-info rounded-pill px-3\" href=\"#\"&gt;Ubah&lt;/a&gt;\n                &lt;a class=\"btn btn-danger rounded-pill px-3\" href=\"#\"&gt;Hapus&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;2&lt;/th&gt;\n            &lt;td&gt;Sepedaan&lt;/td&gt;\n            &lt;td&gt;2023-05-23&lt;/td&gt;\n            &lt;td&gt;2023-05-24&lt;/td&gt;\n            &lt;td&gt;\n                &lt;a class=\"btn btn-success rounded-pill px-3\" type=\"button\" \n                href=\"#\"&gt;Sudah&lt;/a&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;a class=\"btn btn-info rounded-pill px-3\" href=\"#\"&gt;Ubah&lt;/a&gt;\n                &lt;a class=\"btn btn-danger rounded-pill px-3\" href=\"#\"&gt;Hapus&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n Kelas tabel yang digunakan adalah “table table-hover” dimana ketika pointer berada diatas tabel maka baris data akan di highlight.\n\n\n\n\n\n\n\nTip\n\n\n\nSetiap penulisan suati kode jangan lupa untuk menambahkan komentar. Komentar berfungsi untuk memberikan keterangan pada script atau baris kode. Memberikan penjelasan apabila akan dilakukan perubahan oleh programmer lain. Selain itu juga mengingatkan kembali alur atau penjelasan dari script bagi programmer itu sendiri."
  },
  {
    "objectID": "5_konsep_database.html#basis-data-database",
    "href": "5_konsep_database.html#basis-data-database",
    "title": "5. Konsep Database",
    "section": "Basis Data (Database)",
    "text": "Basis Data (Database)\nSecara umum, sekumpulan data terintegrasi dengan ukuran yang sangat besar, dikelola (diolah) dengan cara tertentu yang secara khusus menjelaskan aktifitas - aktifitas dari satu atau beberapa organisasi yang satu sama lain saling terkait."
  },
  {
    "objectID": "5_konsep_database.html#tipe-data",
    "href": "5_konsep_database.html#tipe-data",
    "title": "5. Konsep Database",
    "section": "Tipe Data",
    "text": "Tipe Data\nTipe Data dalam ilmu komputer erat kaitannya dengan pemrgoraman dan database. Didalam pemrograman tipe data biasa digunakan untuk mendefinisikan (menetapkan) isi dari sebuah variabel.\nPerbedaannya dalam database, tipe data ini digunakan untuk menentukan isi dari sebuah data yang akan disimpan.\nTipe data ini berbeda-beda tergantung dari bahasa pemgrograman atau jenis database yang kita gunakan.\nTipe data ini akan dikelompokan menjadi 5 bagian utama. Pada tipe data dalam MySQL dibagi menjadi 3, yaitu :\n\nTipe Data Numerik,\nTipe Data String, dan\nTipe Data Date/Time.\n\n\nTipe Data Numerik\nAdalah tipe data numerik untuk mengukur nilai secara matematik, misalnya mata uang, angka desimal, dll.\n\n\nTabel Tipe Data Numerik\n\n\n\n\n\n\n\n\nNo\nTipe\nKeterangan\nPenerapan\n\n\n\n\n1.\nINTEGER(size)\nTipe data yang berisi kumpulan bilangan bulat, baik dalam bentuk bilangan positif maupun negatif\nAngka secara umum\n\n\n2.\nFLOAT(size)\nBilangan desimal dengan presisi tunggal (single-precision)\nπ, desimal dengan fokus pada nilai input contoh : 3.14159265359\n\n\n3.\nDOUBLE(size, d)\nBilangan desimal dengan presisi ganda (double-precision). Jumlah total digit ditentukan oleh size, jumlah digit setelah titik decimal ditentukan oleh d\nUang, dengan fokus jumlah desimal 2 angka di belakang koma  contoh: 2.500,00\n\n\n\n\n\n\nTipe Data String\nMerupakan suatu teks dengan panjang variabel dimana setiap huruf dapat memiliki ukuran lebih kecil atau besar daripada satuan lainnya. Misalkan nama depan, nama belakang, alamat, nomor telepon, website, serta informasi lainnya.\n\n\nTabel Tipe Data String\n\n\n\n\n\n\n\n\nNo\nTipe\nKeterangan\nPenerapan\n\n\n\n\n1.\nCHAR(size)\nMenyatakan deretan karakter (String) yang lebarnya tetap.  Size : 0 hingga 255 karakter\nJenis_kelamin (L/P)  contoh : L\n\n\n2.\nVARCHAR(size)\nMenyatakan data String yang lebarnya bervariasi.  Size : 0 hingga 255 karakter\nNama pengguna  contoh : Amanda\n\n\n3.\nTEXT(size, d)\nMenampung string Panjang yang lebarnya tidak dapat diprediksi.\n\n\n\n\n\n\n\nTipe Data Date\nMenyimpan tanggal dan waktu dalam format tertentu seperti tahun, bulan, dan hari, jam, menit, dan detik. Tipe data date bisa digunakan untuk mengatur kronologis dari peristiwa.\n\n\nTabel Tipe Data Date\n\n\n\n\n\n\n\n\nNo\nTipe\nKeterangan\nPenerapan\n\n\n\n\n1.\nDATE(size)\nDigunakan dengan tanggal dengan format “YYYY-MM-DD”\n2004-09-21\n\n\n2.\nTIME(size)\nDigunakan untuk waktu dengan format “hh:mm:ss”\n12:33:12\n\n\n3.\nDATETIME(size, d)\nDigunakan untuk tanggal dan waktu dengan format “YYYY-MM-DD hh:mm:ss”\n2012-11-29 11:55:23"
  },
  {
    "objectID": "5_konsep_database.html#constraint-kekangan-nilai",
    "href": "5_konsep_database.html#constraint-kekangan-nilai",
    "title": "5. Konsep Database",
    "section": "Constraint / Kekangan Nilai",
    "text": "Constraint / Kekangan Nilai\nConstraint atau kekangan nilai digunakan untuk menentukan aturan yang mengizinkan atau membatasi nilai yang akan dimasukkan dalam tabel. Kekangan Nilai Menyediakan Metode Yang sesuai untuk memastikan akurasi dan integritas data di dalam table.\nContoh constraint, yaitu :\n\nMembuat Nilai Tidak Kosong(NOT NULL)\nMembuat Nilai Unik(UNIQUE)\nMembuat kenaikan nilai secara otomatis(AUTO INCREMENT)\nMembuat Kunci tamu(FOREIGN KEY)\nMenggunakan Alias table dan query antartable (INNER JOIN)\n\n\nConstraint NOT NULL\nConstraint NOT NULL mengatur agar data tertentu harus terisi atau tidak kosong. Ada kolom tertentu dari suatu table harus terisi dengan nilai valid. Contoh case :\nCREATE TABLE `mahasiswa`(\n    `nama` VARCHAR(50), NOT NULL,\n    `nim` VARCHAR(30) NOT NULL  \n)\nUntuk case di atas maka nama dan nim yang diinputkan ke dalam database tidak boleh kosong.\n\n\nConstraint UNIQUE\nConstraint UNIQUE ditujukan untuk memastikan bahwa nilai dalam kolom unik, artinya kolom tidak dapat menyimpan nilai duplikat. Contoh case:\nCREATE TABLE `mahasiswa`(\n    `nama` VARCHAR(50) NOT NULL,\n    `nim` VARCHAR(50) NOT NULL UNIQUE\n)\nUntuk case di atas nama mahasiswa bisa saja sama, tapi NIM mahasiswa tidak akan pernah sama maka diberi Constraint UNIQUE\n\n\nConstraint AUTO INCREMENT\nAuto increment digunakan untuk menaikkan nilai secara otomatis pada field numerik. Ada beberapa hal yang harus diperhatikan dalam menggunakan auto increment:\n\nHanya Dapat Digunakan Pada field numerik\nField harus bersifat primary key atau unik\nField tidak boleh bersifat null\nDalam Satu Tabel hanya ada satu field yang menggunakan auto increment\n\nCREATE TABLE `mahasiswa`(\n    `id` VARCHAR(11) NOT NULL AUTO_INCREMENT,\n    `nama` VARCHAR(50) NOT NULL,\n    `nim` VARCHAR(50) NOT NULL UNIQUE\n)"
  },
  {
    "objectID": "5_konsep_database.html#pembuatan-database",
    "href": "5_konsep_database.html#pembuatan-database",
    "title": "5. Konsep Database",
    "section": "Pembuatan Database",
    "text": "Pembuatan Database\nDalam pembuatan database dapat dibuat dalam 2 cara, yaitu menggunakan platform dan menggunakan scripting\n\n\n\n\n\n\nMenggunakan Platform\n\n\n\n\n\n\n\nMenggunakan scripting"
  },
  {
    "objectID": "5_konsep_database.html#perintah-mysql-ddl-dml-dcl",
    "href": "5_konsep_database.html#perintah-mysql-ddl-dml-dcl",
    "title": "5. Konsep Database",
    "section": "Perintah MySQL (DDL, DML, DCL)",
    "text": "Perintah MySQL (DDL, DML, DCL)\nSecara umum perintah fungsi MySQL dibagi menjadi 3, yaitu :\n\nDDL (Data Definition Language),\nDML(Data Manipulation), dan\nDCL (Data Control Language).\n\nPada modul ini akan dibatasi pada DDL dan DML untuk praktek.\n\n\n\nDDL, DML, DCL\n\n\n\nData Definition Language (DDL)\nData Definition Language (DDL) adalah bagian dari SQL (Structured Query Language) yang digunakan untuk mendefinisikan struktur database dan objeknya, seperti tabel, tampilan, indeks, dan prosedur dalam sebuah database. Pernyataan DDL digunakan untuk membuat, mengubah, dan menghapus objek database, termasuk tabel, tampilan, indeks, dan prosedur tersimpan. Beberapa pernyataan DDL yang paling umum meliputi:\n\nCREATE\nPernyataan ini membuat objek database baru, seperti tabel, tampilan, atau indeks. Misalnya, pernyataan SQL berikut membuat tabel yang disebut “pelanggan”:\nCREATE TABLE pelanggan ( id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255));\n\n\nALTER\nPernyataan ini digunakan untuk memodifikasi objek database yang sudah ada. Misalnya, pernyataan SQL berikut menambahkan kolom baru bernama ” email ” ke tabel ” customers “:\npelanggan ALTER TABLE ADD email VARCHAR(255);\n\n\nDROP\nPernyataan ini digunakan untuk menghapus objek database yang sudah ada. Misalnya, pernyataan SQL berikut menghapus tabel “pelanggan”:\npelanggan DROP TABLE;\n\n\nTRUNCATE\nPernyataan ini digunakan untuk menghapus semua baris dalam tabel, tetapi tidak seperti pernyataan DROP, pernyataan ini mempertahankan struktur dan indeks tabel. \n\n\nRENAME\nPernyataan ini digunakan untuk mengganti nama objek database yang sudah ada. Misalnya, pernyataan SQL berikut mengganti nama tabel “pelanggan” menjadi “klien”:\nRENAME TABLE pelanggan TO klien;\nPenting untuk dicatat bahwa pernyataan DDL dieksekusi segera dan bersifat permanen, artinya setelah objek dibuat, diubah, atau dihapus, perubahan tidak dapat diurungkan. Oleh karena itu, sangat penting untuk berhati-hati dan memastikan bahwa Anda memiliki cadangan basis data sebelum menjalankan pernyataan DDL apa pun. Selain itu, pernyataan DDL biasanya dijalankan oleh administrator database atau pengembang dengan hak istimewa dan izin yang sesuai untuk mengubah struktur database. \n\n\nSHOW\nPerintah DDL ini digunakan untuk menampilkan daftar database atau tabel yang ada.\nPenerapan :\nSHOW TABLES;\n\n\n\n\n\n\n\nLatihan DDL\n\n\n\n\nCreate Database Mahasiswa dan Table identitas \nCREATE DATABASE mahasiswa;\nCREATE TABLE identitas (`Nama` VARCHAR(250) NOT NULL PRIMARY KEY);\nAlter Table \nALTER TABLE identitas ADD NIM VARCHAR(15) UNIQUE\nRename Table \nRENAME TABLE identitas TO id_mahasiswa\nShow Table \nSHOW TABLES;\nDrop Table \nDROP TABLE id_mahasiswa\nCoba kreasikan Database kalian dengan perintah DDL! Buatlah Database kuliah berisi 2 table yaitu id_dosen dan id_mahasiswa Table id_dosen berisi kolom : nama, NIDN, Jabatan Table id_mahasiswa berisi kolom : nama, NIM, Prodi\n\n\n\n\n\n\nData Manipulation Language (DML)\nData Manipulation Language (DML) adalah bagian dari SQL (Structured Query Language) yang digunakan untuk memanipulasi data dalam database. Sehingga pernyataan DML ini dapat digunakan ketika database dan tabel telah dibuat. Pernyataan DML digunakan untuk menyisipkan, memperbarui, dan menghapus data dalam database. Beberapa pernyataan DML yang paling umum meliputi:\n\nINSERT\nPernyataan ini digunakan untuk memasukkan data baru ke dalam tabel. Sebagai ilustrasi, pernyataan SQL berikut menyisipkan baris baru ke dalam tabel “pelanggan”:\nINSERT INTO pelanggan (id, nama, alamat) VALUES (1, 'John Smith,' '123 Main St');\n\n\nSELECT\nPernyataan ini digunakan untuk mengambil data dari satu atau lebih tabel dalam database. Sebagai contoh, kueri SQL berikut mengambil semua rekaman dari tabel “pelanggan”:\nSELECT * FROM pelanggan;\n\n\nUPDATE\nPernyataan ini digunakan untuk memodifikasi data yang ada dalam sebuah tabel. Misalnya, pernyataan SQL berikut memperbarui alamat pelanggan dengan ID 1 di tabel “pelanggan”:\nUPDATE pelanggan SET address = '456 Park Ave' WHERE id = 1;\n\n\nDELETE\nPernyataan ini digunakan untuk menghapus data dari tabel. Misalnya, pernyataan SQL berikut menghapus pelanggan dengan ID 1 dari tabel “pelanggan”:\nDELETE FROM pelanggan WHERE id = 1;\n\n\n\n\n\n\nLatihan DML\n\n\n\nGunakan Database yang telah kalian kerjakan pada Latihan DDL sebelumnya!\n\nInsert Data\nINSERT INTO id_mahasiswa VALUES ('Amanda', 'A11.2020.54321',);\nSelect Data\nSELECT Nama, NIM FROM id_mahasiswa;\nUpdate Data\nUPDATE id_mahasiswa SET `Prodi`='Ilmu Komunikasi' WHERE `Prodi`='';\nDelete Data\nDELETE FROM id_mahasiswa WHERE `NIM`='A11.2020.54321';\nKreasikan database kalian dengan perintah dari DDL dan DML !\n\n\n\n\n\n\n\n\n\nKonsep Database\n\n\n\nBerikut merupakan penjelasan dari konsep database!"
  },
  {
    "objectID": "6_praktik_database_todolist.html#membuat-database",
    "href": "6_praktik_database_todolist.html#membuat-database",
    "title": "6. Praktik Database",
    "section": "Membuat Database",
    "text": "Membuat Database\nUntuk membuat database dapat menggunakan fasilitas dari platform atau scripting. Pada halaman beranda phpMyAdmin terdapat menu Database dan SQL. Pada Database dapat membuat database baru dengan menggunakan platform atau GUI dari phpMyAdmin. Sedangkan pada menu SQL dapat memasukkan script CREATE untuk membuat database baru dengan menggunakan code SQL.\n\n\n\n\n\n\nMenggunakan Platform\n\n\n\n\n\n\n\nMenggunakan scripting\n\n\n\n\n\nUntuk membuat database menggunakan phpMyAdmin perlu mengaktifkan terlebih dahulu apache dan mysql pada xampp agar terhubung pada phpMyAdmin. Lalu memulai aplikasi phpMyAdmin melalui http://localhost/phpmyadmin/"
  },
  {
    "objectID": "6_praktik_database_todolist.html#create-database-dari-gui-phpmyadmin",
    "href": "6_praktik_database_todolist.html#create-database-dari-gui-phpmyadmin",
    "title": "6. Praktik Database",
    "section": "Create Database dari GUI PHPMyAdmin",
    "text": "Create Database dari GUI PHPMyAdmin\nUntuk membuat database melalui phpMyAdmin dapat melalui langkah-langkah berikut:\n\nBuka phpMyAdmin pada web browser\nKlik menu Databases di sisi kiri atas\nPada halaman baru, klik tombol Create Database\nMasukan nama untuk databse yang akan di buat\nLalu klik enter atau Create.\n\n\n\n\nCreate Database melalui Platform"
  },
  {
    "objectID": "6_praktik_database_todolist.html#create-table-dari-platform",
    "href": "6_praktik_database_todolist.html#create-table-dari-platform",
    "title": "6. Praktik Database",
    "section": "Create Table dari Platform",
    "text": "Create Table dari Platform\nSetelah database dibuat langkah selanjutnya adalah membuat tabel-tabel yang akan digunakan. Berikut adalah langkah-langkah membuat tabel baru:\n\nLogin ke platform (phpMyAdmin)\nPilih database yang ingin dituju\nKlik tab Tables dan pilih tabel mana yang ingin anda tambahkan\nPada form Create Table masukkan nama tabel dan jumlah kolom yang akan dibuat.\n\n\n\n\nCreate Table\n\n\n\nIsi form field sesuai perintah yang telah disediakan\nTekan save.\n\n\n\n\nInset Columns\n\n\n\n\nPreview Scripting SQL\nMeskipun meembuat tabel melalui platform atau GUI dari phpMyAdmin tetap kita dapat melihat bagaimana kode yang berjalan pada proses pembuatan tabel tersebut dengan klik tombol preview SQL yang terdapata pada sebelah tombol save atau simpan.\n\n\n\nPreview Script SQL"
  },
  {
    "objectID": "6_praktik_database_todolist.html#menambahkan-primary-key",
    "href": "6_praktik_database_todolist.html#menambahkan-primary-key",
    "title": "6. Praktik Database",
    "section": "Menambahkan Primary Key",
    "text": "Menambahkan Primary Key\nMenambahkan primary key pada suatu table adalah proses untuk menjadikan salah satu atau beberapa column dari table sebagai referensi unik, agar tidak ada dua data yang memiliki nilai yang sama pada semua row tsb. Proses ini dilakukan setelah membuat columns baru pada table. Jika pada pembuatan tabel belum diinisialisasi untuk primary key, dapat mengubah dalah satu kolom menjadi primary key melalui perintan alter. Sehingga perlu membuka menu SQL untuk memasukkan kode sql untuk merubah data menjadi primary key.\n\n\n\nPrimary Key\n\n\nSelain itu dapat mengubah data yang bersifat primary key melalui platform phpmyadmin dengan cara membuka database lalu tabel yang akan digunakan lali pilih menu arsitektur. Melalui menu tersebut akan ditampilkan kolom-kolom dari tabel. Checklist kolom yang ingin diatur lalu klik ubah atau Change, atau langsung klik primary dengan ikon kunci untuk merubah suatu kolom menjadi primary."
  },
  {
    "objectID": "6_praktik_database_todolist.html#membuat-auto-increment-melalui-platform",
    "href": "6_praktik_database_todolist.html#membuat-auto-increment-melalui-platform",
    "title": "6. Praktik Database",
    "section": "Membuat Auto Increment melalui Platform",
    "text": "Membuat Auto Increment melalui Platform\nAuto increment merupakan cara untuk mengatur nilai otomatis pada kolom yang memiliki tipe data integer, yang akan diisi secara berurutan dan tidak boleh ada duplikasi. Auto Increment biasa digunakan untuk membuat primary key secara otomatis untuk setiap kali data baru dimasukan ke database, maka value yang diinput akan ditetapkan oleh sistem dan tidak dapat dirubah lagi oleh user.\n\n\n\nAuto Increment"
  },
  {
    "objectID": "6_praktik_database_todolist.html#insert-data",
    "href": "6_praktik_database_todolist.html#insert-data",
    "title": "6. Praktik Database",
    "section": "Insert Data",
    "text": "Insert Data\nSetelah database dan tabel telah dibuat, langkah selanjutnya adalah melakukan input data kedalam tabel yang sesuai. Melalui phpMyAdmin dapat melakukan perintah insert untuk input data melalui platform atau perintah SQL.\n\nInsert melalui Platform\nUntuk melakukan insert data melalui platform dapat dilakukan melalui beberapa tahap berikut: langkah-langkah insert data melalui GUI phpMyadmin:\n\nBuka Database lalu tabel yang ingin dilakukan input data.\nKlik menu insert pada Tab Tabel.\nIsikan data-data pada form sesuai dengan tipe data yang diinginkan. Pada kolom yang bersifat auto increment tidak perlu diisi apapun karena akan digenerate oleh sistem.\nSetelah semua terisi klik Go.\n\n\n\n\nInsert melalui Platform\n\n\n\n\nInsert Table Melalui SQL\nSelain melalui platform dengan kemudahan yang diberikan, dapat juga melakukan input data dengan menggunakan kode SQL sehingga dapat melatih kemampuan dalam mengolah bahasa pemrograman untuk database SQL. Adapun langkah-langkah yang bisa dilakukan sebagai berikut:\n\nBuka Database lalu tabel yang ingin dilakukan input data.\nKlik SQL pada menu Tab Tabel.\nTerdapat textbox untuk mengisikan kode SQL untuk menyimpan, mengubah bahkan menghapus data pada database sesuai dengan syntax yang ada.\nInputkan perintah untuk melakukan insert pada tabel, seperti berikut:\nINSERT INTO `kegiatan` \n(`id`, `isi`, `tgl_awal`, `tgl_akhir`,`status`) \nVALUES \n(NULL, 'Belanja Bulanan', '2023-05-15', '2023-06-11', 0);\n\n\n\n\nInsert melalui SQL\n\n\n\n\nInsert Bertumpuk dalam SQL\nProses insert pada database bisa juga secara serentak atau bersamaan sekaligus melalui kode sql seperti berikut.\n\n\n\nInsert Bertumpuk\n\n\nPada insert tabel tidak perlu menginputkan id atau kolom yang bertugas sebagai primary key. Hal tersebut terjadi karena telah diatur otomatis melalui perintah auto increment, sehingga pada input ataupun update data tidak ada input atau menyimpan id karena telah di atur oleh sistem."
  },
  {
    "objectID": "6_praktik_database_todolist.html#preview-sql-perintah-yang-berhasil-berjalan.",
    "href": "6_praktik_database_todolist.html#preview-sql-perintah-yang-berhasil-berjalan.",
    "title": "6. Praktik Database",
    "section": "Preview SQL perintah yang berhasil berjalan.",
    "text": "Preview SQL perintah yang berhasil berjalan.\nSetiap selesai proses pada database baik melalui platform yang diberikan maupun kode SQL akan selalu muncul script kode SQL dari program yang baru saja berjalan, seperti berikut\n\n\n\nPreview Script"
  },
  {
    "objectID": "6_praktik_database_todolist.html#preview-hasil-table",
    "href": "6_praktik_database_todolist.html#preview-hasil-table",
    "title": "6. Praktik Database",
    "section": "Preview Hasil Table",
    "text": "Preview Hasil Table\nBerikut adalah hasil dari praktikum database untuk studi kasus To Do List:\n\n\n\nHasil Database\n\n\n\n\n\n\n\n\nPraktek Database\n\n\n\nBerikut adalah penjelasan mengenai praktik pembuatan database!"
  },
  {
    "objectID": "9_penguji_web.html#debugging",
    "href": "9_penguji_web.html#debugging",
    "title": "7. Pengujian Web",
    "section": "Debugging",
    "text": "Debugging\nproses mengidentifikasi, memahami, dan memperbaiki kesalahan atau bug dalam kode web. Tujuan utama dari debugging adalah untuk memastikan bahwa aplikasi web berfungsi dengan baik, memperbaiki masalah yang muncul, dan mengoptimalkan kualitas serta kinerja situs web.\n\n1. Identifikasi Bug\nProses debugging dimulai dengan mengidentifikasi adanya bug atau masalah dalam aplikasi web. Ini bisa didasarkan pada keluhan pengguna, error message yang muncul, atau perilaku yang tidak diharapkan pada situs web. Pemahaman yang jelas tentang apa yang seharusnya terjadi dan apa yang sebenarnya terjadi penting untuk mengidentifikasi bug.\n\n\n2. Log dan Pesan Kesalahan\nMenggunakan log dan pesan kesalahan adalah cara umum untuk memahami dan melacak bug dalam pemrograman web. Penggunaan pernyataan log untuk mencatat informasi penting saat aplikasi web berjalan, serta menampilkan pesan kesalahan yang informatif saat bug terjadi, membantu dalam mengidentifikasi penyebab dan lokasi bug\n\n\n3. Debugging Tools\nAlat-alat debugger web browser yang memungkinkan inspeksi elemen HTML, CSS, dan JavaScript, serta memberikan kemampuan untuk menghentikan eksekusi kode pada titik tertentu dan melacak variabel dan status program."
  },
  {
    "objectID": "9_penguji_web.html#pengujian",
    "href": "9_penguji_web.html#pengujian",
    "title": "7. Pengujian Web",
    "section": "Pengujian",
    "text": "Pengujian\nPengujian program adalah proses sistematis untuk mengevaluasi kualitas dan kinerja program. Tujuan utamanya adalah untuk memastikan bahwa program berfungsi dengan benar, memberikan output yang sesuai, dan memenuhi persyaratan yang ditentukan. Berikut adalah beberapa jenis pengujian program yang umum dilakukan:\n\n1. Pengujian Fungsional\nPengujian fungsional bertujuan untuk memastikan bahwa semua fungsi yang ada di situs web berjalan dengan benar. Ini melibatkan memeriksa tautan, navigasi, formulir, fitur interaktif, dan fungsionalitas lainnya.\n\n\n2. Pengujian Kompatibilitas\nPengujian kompatibilitas dilakukan untuk memastikan bahwa situs web dapat berfungsi dengan baik di berbagai platform, perangkat, dan peramban web yang berbeda. Ini mencakup pengujian responsif untuk memastikan tampilan yang sesuai di perangkat mobile, tablet, dan desktop\n\n\n3. Pengujian Kinerja\nPengujian kinerja bertujuan untuk memastikan bahwa situs web dapat menangani beban lalu lintas yang tinggi dan memberikan kinerja yang baik dalam kondisi yang berbeda. Ini melibatkan pengujian kecepatan loading halaman, waktu respon server, penggunaan sumber daya seperti memori dan CPU, dan pengujian beban untuk menguji batasan situs web.\n\n\n4. Pengujian Keamanan\nPengujian keamanan penting untuk melindungi situs web dari ancaman seperti serangan hacker, serangan DDoS, peretasan data, dan kerentanan lainnya. Ini mencakup pengujian kerentanan, pengujian serangan (misalnya, serangan injeksi SQL), dan pengujian autentikasi serta otorisasi untuk memastikan bahwa situs web memiliki lapisan keamanan yang memadai."
  },
  {
    "objectID": "9_penguji_web.html#browser-developer-tools---inspect",
    "href": "9_penguji_web.html#browser-developer-tools---inspect",
    "title": "7. Pengujian Web",
    "section": "Browser Developer tools - Inspect",
    "text": "Browser Developer tools - Inspect\nPada browser web modern telah difasilitasi dengan fitur inspect yang memungkinkan pengembang web untuk dapat memeriksa dan menganalisis elemen-elemen pada halaman web.\n\n\n1. Membuka Inspect\nFungsi inspect dapat diakses dengan klik kanan pada halaman web lalu pilih inspect\n\n\n\nOpen Inspect\n\n\n\n\n\n2. Memeriksa Pesan Kesalahan\n\n\n\nPanel Inspect\n\n\nTerlihat pada halaman tersebut terdapat 3 pesan kesalahan mengenai variabel for dan id yang tidak memiliki kesesuaian sehingga antara label dan form tidak terhubung. Hal tersebut akan mengakibatkan label yang diklik tidak mengarah pada form yang dimaksudkan.\n\n\n\n3. Network\n\n\n\nTab Network\n\n\nMelalui tab network digunakan untuk memonitor lalu lintas jaringan yang dihasilkan oleh situs web, seperti melihat permintaan HTTP, waktu respon, dan memeriksa apakah ada masalah koneksi atau pengalihan yang tidak diinginkan.\n\n\n\n4. Responsive Web\n\n\n\nResponsive Preview\n\n\nDengan melakukan pengecekan responsive web dapat diketahui bagaimana kompatibilitas website pada perangkat mobile, tablet, dan desktop."
  },
  {
    "objectID": "studi_kasus.html#program-to-do-list",
    "href": "studi_kasus.html#program-to-do-list",
    "title": "Studi Kasus",
    "section": "Program To Do List",
    "text": "Program To Do List\nPada Front Page telah dibuat tampilan dari Program To Do List sehingga perlu untuk menyelesakan kurusus Front Page.\nPada praktikum database kita telah membuat database dengan studi kasus dari to do list ini selanjutnya akan dijelaskan bagaimana memfungsikan tombol dan menghubungkan program to do list dengan database."
  },
  {
    "objectID": "studi_kasus.html#poliklinik",
    "href": "studi_kasus.html#poliklinik",
    "title": "Studi Kasus",
    "section": "Poliklinik",
    "text": "Poliklinik\nPada program poliklinik merupakan pengembangan pemahaman dari yang telah dipelajari sebelumnya sehingga program yang dibuat dapat memodifikasi dari studi kasus sebelumnya."
  },
  {
    "objectID": "7_program_todolist.html#studi-kasus-program-to-do-list",
    "href": "7_program_todolist.html#studi-kasus-program-to-do-list",
    "title": "To Do List",
    "section": "Studi Kasus Program To Do List",
    "text": "Studi Kasus Program To Do List\nTo Do List merupakan program untuk mencatat serangkaian kegiatan yang akan dikerjakan hingga diselesaikan pada waktu tertentu. Sehingga dalam program tersebut harus mampu menyimpan lalu menampilkan hingga mengubah atau menghapus data seperti kegiatan, tanggal dan keterangan apakah sudah dilaksanakan atau belum.\nBerikut adalah tampilan dari to do list untuk latihan membuat web sederhana.\n\n\n\nTampilan Index\n\n\nSebelum kita mulai membuat program to do list tersebut ada beberapa tahapan yang diperlukan, seperti menghidupkan server yang digunakan (xampp), membuat database, koneksi, hingga membuat tampilan dari program."
  },
  {
    "objectID": "7_program_todolist.html#server-lokal-xampp",
    "href": "7_program_todolist.html#server-lokal-xampp",
    "title": "To Do List",
    "section": "Server Lokal (XAMPP)",
    "text": "Server Lokal (XAMPP)\nUntuk dapat menampilkan file php memerlukan server sehingga diperlukan xampp untuk menampilkan php pada server dengan mengaktifkan apache. \n\n\n\nMemulai XAMPP\n\n\n Pada panel xampp, klik start pada Apache dan MySQL untuk mengaktifkan. Apache diperlukan karena sebagai web server untuk mengakses localhost dan menampilkan file php. Sedangkan pada MySQL diperlukan untuk manajemen dan akses ke database."
  },
  {
    "objectID": "7_program_todolist.html#folder-di-htdocs",
    "href": "7_program_todolist.html#folder-di-htdocs",
    "title": "To Do List",
    "section": "Folder di htdocs",
    "text": "Folder di htdocs\nUntuk dapat mengakses website localhost dari xampp, diperlukan folder project di direktori C:\\xampp\\htdocs, sesuai dengan direktori xampp yang sedang aktif.\n\nBuka direktori C:\\xampp\\htdocs. Untuk memastikan lokasi direktori xampp dapat klik tombol Explorer pada control panel xampp \n\n\n\n\nExplorer XAMPP\n\n\n\n\nSetelah membuka folder xampp lalu htdocs, selanjutnya membuat folder projek.\n\n\n\n\n\nFolder Projek\n\n\n Folder projek ini digunakan sebagai tempat menyimpan file php dan file lain untuk yang digunakan untuk membuat web yang berhubungan dengan projek."
  },
  {
    "objectID": "7_program_todolist.html#database",
    "href": "7_program_todolist.html#database",
    "title": "To Do List",
    "section": "Database",
    "text": "Database\nDari contoh di atas hanya diperlukan 1 tabel, yaitu tabel yang dapat menyimpan daftar kegiatan. Berikut adalah komponen-komponen dari tabel yang diperlukan. \n\n\n\nTabel Kegiatan\n\n\n\nMembuat database pada localhost/phpmyadmin”\n\nMembuaka localhost/phpmyadmin.\nMembuat database baru lalu membuat tabel baru dengan nama tabel “kegiatan”.\nBuat field dan sesuaikan pada tabel di atas mulai dari nama field, type dan sizenya.\n\nProses pembuatan database secara lebih lengkap dapat diklik disini\nField “id” berfungsi sebagai primary key. Pada field isi, tgl_awal, dan tgl_akhir tidak memerlukan size karena bertipe text dan date. Pada field status bertipe int dengan size hanya 1 karena nantinya akan menyimpan nilai 0 dan 1 yang merepresentasikan belum dan sudah."
  },
  {
    "objectID": "7_program_todolist.html#koneksi",
    "href": "7_program_todolist.html#koneksi",
    "title": "To Do List",
    "section": "Koneksi",
    "text": "Koneksi\nKoneksi diperlukan untuk menghubungkan php dengan database yang kita buat, dimana sebelumnya kita membuat database sql. Untuk menghubungkan php dengan sql menggunakan argumen mysqli_connect. Maka perlu membuat file koneksi.php lalu di include-kan pada file php yang terhubung dengan database. \n&lt;?php \n$databaseHost = 'localhost';\n$databaseName = 'kegiatan';\n$databaseUsername = 'root';\n$databasePassword = '';\n\n$mysqli = mysqli_connect($databaseHost, $databaseUsername, \n    $databasePassword, $databaseName);\n Pada mysqli_connect terdapat beberapa parameter, yaitu mysql_host, mysql_host, mysql_user, mysql_password, dan mysql_database. \n\nmysql_host  Jika menjalankan MySQL menggunakan XAMPP di komputer yang sama dengan tempat web server Apache berjalan, maka alamat ini bisa diisi dengan “localhost” atau “127.0.0.1”. Namun jika MySQL server dijalankan dari perangkat komputer server lain, argumen ini akan berisi IP address dari komputer server tersebut. \nmysql_user  berisi nama pengguna MySQL yang digunakan untuk login ke server database, seperti “root”, “admin”, atau “nama_anda”. Karena kita menggunakan MySQL dari XAMPP, secara default, nama pengguna yang digunakan adalah “root”. Jadi, jika Anda tidak mengubah pengaturan default XAMPP, Anda dapat menggunakan “root” sebagai nilai argumen nama pengguna saat memuat fungsi mysqli_connect(). \nmysql_password  diisi dengan password user yang terdaftar pada server mysql. Secara default karena kita menggunakan MySQL dari xampp tanpa mengubah passwordnya maka nilai passwordnya adalah kosong sehingga dapat diisikan ““. \nmysql_database  pada parameter mysql_database diisikan nama database yang telah kita buat. Database yang kita buat sebelumnya adalah kegiatan atau sesuai yang telah anda buat."
  },
  {
    "objectID": "7_program_todolist.html#index",
    "href": "7_program_todolist.html#index",
    "title": "To Do List",
    "section": "Index",
    "text": "Index\nPada langkah sebelumnya kita telah membuat database dan koneksi untuk menghubungkan database dengan file php, selanjutnya adalah membuat file website. File website utama yang akan otomatis ditampilkan ketika telah membuka localhost/(folder projek dalam htdoc) adalah index.php. Pada file index perlu memuat atau meload file koneksi.php yang telah dibuat sebelumnya agar website dapat terhubung pada database yang telah dibuat. \n&lt;?php\ninclude_once(\"koneksi.php\");\n?&gt;\nUntuk memuat file php lain dapat menggunakan fungsi php yaitu require, require_once atau include atau include_once. Lalu apa perbedaan fungsi-fungsi tersebut? \n\nJika fungsi include, ketika terjadi error pada file yang dipanggil maka akan menampilkan warning error pada kode yang error saja, namun kode-kode selanjutnya akan tetap dijalankan.\nSedangkan fungsi require, ketika terjadi error pada file yang dipanggil maka akan menampilkan fatal error, atau menghentikan program yang berjalan sehingga kode program setelahnya tidak akan dieksekusi.\nUntuk include_once dan require_once sama dengan fungsi include dan require, namun fungsi itu hanya akan meload file sekali, sehingga ketika terdapat program yang memuat file yang sama setelahnya tidak akan dijalankan.\n\n\n\n1. Memulai html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, \n    initial-scale=1.0\"&gt;\n\n    &lt;!-- Bootstrap offline --&gt;\n\n    &lt;link rel=\"stylesheet\" href=\"assets/css/bootstrap.css\"&gt; \n\n    &lt;!-- Bootstrap Online --&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" \n    rel=\"stylesheet\" \n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"&gt;   \n    \n    &lt;title&gt;To Do List&lt;/title&gt;   &lt;!--Judul Halaman--&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;\nPada vscode ketika menuliskan html maka akan muncul pilihan template html yang akan digunakan, pada kode diatas menggunakan html5. Seperti yang telah dipelajari sebelumnya mengenai framework bootstrap, perlu memuat file bootstrap. Jika dalam menjalankan program selalu terhubung dengan internet dapat memuat css maupun js bootstrap dapat diakses pada halaman dokumentasi bootstrap bagian introduction. Namun jika dalam keadaan jarang terhubung internet maka dapat mengunduh terlebih dahulu file bootstrap lalu dapat meng-export-nya dan membuat folder assets pada lokasi folder projek untuk menyimpan file paket dari bootstrap. \nPada body diisikan konten yang ingin ditampilkan, yaitu judul, form, tabel, dan button. Untuk menggunakan framework pada komponen tersebut dapat melihat pada halaman docs bootstrap untuk melihat dokumentasi dari penggunaan bootstrap lalu cari dokumentasi komponen yang ingin digunakan. Pilih dokumentasi yang sesuai dan modifikasi sesuai dengan kebutuhan yang ingin digunakan. \n&lt;div class=\"container\"&gt;\nPada tampilan yang diinginkan adalah memusatkan dan mengelompokkan konten utama, maka digunakan container.\n\n\n\n2. Judul (heading)\n&lt;h3&gt;\n    To Do List\n    &lt;small class=\"text-muted\"&gt;\n        Catat semua hal yang akan kamu kerjakan disini.\n    &lt;/small&gt;\n&lt;/h3&gt;\n&lt;hr&gt;    \n\nMenampilkan judul dapat menggunakan heading 1 hingga 6. Semakin besar angka heading maka akan semakin kecil ukuran dari teks yang akan ditampilkan. Pada judul menampilkan kalimat “To Do List” sebagai kalimat utama dan “Catat semua hal yang akan kamu kerjakan” sebagai slogan atau kalimat penjelas sehingga pada slogan tersebut dimasukkan kedalam tag small dengan class text-muted untuk mengecilkan huruf dan memberikan warna seakan redup karena teks tersebut memiliki tingkat kepentingan lebih rendah.\n\n\n\n3. Form\n&lt;!--Form Input Data--&gt;\n\n&lt;form class=\"form row\" method=\"POST\" action=\"\" name=\"myForm\" onsubmit=\"return(validate());\"&gt;\n    &lt;!-- Kode php untuk menghubungkan form dengan database --&gt;\n    &lt;?php\n    $isi = '';\n    $tgl_awal = '';\n    $tgl_akhir = '';\n    if (isset($_GET['id'])) {\n        $ambil = mysqli_query($mysqli, \n        \"SELECT * FROM kegiatan \n        WHERE id='\" . $_GET['id'] . \"'\");\n        while ($row = mysqli_fetch_array($ambil)) {\n            $isi = $row['isi'];\n            $tgl_awal = $row['tgl_awal'];\n            $tgl_akhir = $row['tgl_akhir'];\n        }\n    ?&gt;\n        &lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo\n        $_GET['id'] ?&gt;\"&gt;\n    &lt;?php\n    }\n    ?&gt;\n    &lt;div class=\"col\"&gt;\n        &lt;label for=\"inputIsi\" class=\"form-label fw-bold\"&gt;\n            Kegiatan\n        &lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" name=\"isi\" id=\"inputIsi\" placeholder=\"Kegiatan\" value=\"&lt;?php echo $isi ?&gt;\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col\"&gt;\n        &lt;label for=\"inputTanggalAwal\" class=\"form-label fw-bold\"&gt;\n            Tanggal Awal\n        &lt;/label&gt;\n        &lt;input type=\"date\" class=\"form-control\" name=\"tgl_awal\" id=\"inputTanggalAwal\" placeholder=\"Tanggal Awal\" value=\"&lt;?php echo $tgl_awal ?&gt;\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col mb-2\"&gt;\n        &lt;label for=\"inputTanggalAkhir\" class=\"form-label fw-bold\"&gt;\n        Tanggal Akhir\n        &lt;/label&gt;\n        &lt;input type=\"date\" class=\"form-control\" name=\"tgl_akhir\" id=\"inputTanggalAkhir\" placeholder=\"Tanggal Akhir\" value=\"&lt;?php echo $tgl_akhir ?&gt;\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col\"&gt;\n        &lt;button type=\"submit\" class=\"btn btn-primary rounded-pill px-3\" name=\"simpan\"&gt;Simpan&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n\nTerdapat tiga input pada form, yaitu kegiatan, tanggal awal, dan tanggal akhir. Namun pada database terdapat field id yang diatur untuk autoincrement sehingga akan terisi otomatis sesuai urutan data disimpan. pada bootstrap v5 untuk membuat form dalam satu baris dapat menggunakan grid, yaitu dengan class “row” dan “col”. Pada form akan menampilkan placeholder keterangan sesuai inputan form. \nTerdapat kode PHP untuk menghubungkan form dengan database, dengan cara mengambil data dari database lalu dimunculkan melalui value berdasarkan variabel yang sesuai, berdasarkan id dari data ketika dilakukan ubah data. Untuk mengambil data dari database digunakan perintah SQl: \nSELECT * FROM kegiatan WHERE id='\" . $_GET['id'] . \"'\nNilai id didapat dari get data id yang dikirimkan ketika klik tombol ubah. \nSelain form juga terdapat button yang bertipe submit dengan class dari btn, btn-primary untuk memberikan warna biru atau dapat memberi variasi lain yang sesuai dengan btn-(kode warna yang ada pada dokumentasi bootstrap). Dalam pemilihan warna pada tombol harus disesuaikan dengan user experience.\n\n\n\n4. Tabel\n&lt;!-- Table--&gt;\n&lt;table class=\"table table-hover\"&gt;\n    &lt;!--thead atau baris judul--&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th scope=\"col\"&gt;#&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Kegiatan&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Awal&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Akhir&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Status&lt;/th&gt;\n            &lt;th scope=\"col\"&gt;Aksi&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;!--tbody berisi isi tabel sesuai dengan judul atau head--&gt;\n    &lt;tbody&gt;\n        &lt;!-- Kode PHP untuk menampilkan semua isi dari tabel urut\n        berdasarkan status dan tanggal awal--&gt;\n        &lt;?php\n        $result = mysqli_query(\n            $mysqli,\"SELECT * FROM kegiatan ORDER BY status,tgl_awal\"\n            );\n        $no = 1;\n        while ($data = mysqli_fetch_array($result)) {\n        ?&gt;\n            &lt;tr&gt;\n                &lt;th scope=\"row\"&gt;&lt;?php echo $no++ ?&gt;&lt;/th&gt;\n                &lt;td&gt;&lt;?php echo $data['isi'] ?&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;?php echo $data['tgl_awal'] ?&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;?php echo $data['tgl_akhir'] ?&gt;&lt;/td&gt;\n                &lt;td&gt;\n                    &lt;?php\n                    if ($data['status'] == '1') {\n                    ?&gt;\n                        &lt;a class=\"btn btn-success rounded-pill px-3\" type=\"button\" \n                        href=\"index.php?id=&lt;?php echo $data['id'] ?&gt;&aksi=ubah_status&status=0\"&gt;\n                        Sudah\n                        &lt;/a&gt;\n                    &lt;?php\n                    } else {\n                    ?&gt;\n                        &lt;a class=\"btn btn-warning rounded-pill px-3\" type=\"button\" \n                        href=\"index.php?id=&lt;?php echo $data['id'] ?&gt;&aksi=ubah_status&status=1\"&gt;\n                        Belum&lt;/a&gt;\n                    &lt;?php\n                    }\n                    ?&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                    &lt;a class=\"btn btn-info rounded-pill px-3\" \n                    href=\"index.php?id=&lt;?php echo $data['id'] ?&gt;\"&gt;Ubah\n                    &lt;/a&gt;\n                    &lt;a class=\"btn btn-danger rounded-pill px-3\" \n                    href=\"index.php?id=&lt;?php echo $data['id'] ?&gt;&aksi=hapus\"&gt;Hapus\n                    &lt;/a&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;?php\n        }\n        ?&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n\nPada Tabel akan menampilkan data-data dari database kegiatan yang diurutkan berdasarkan status dan tanggal awal melalui perintah SQL : \nSELECT * FROM kegiatan ORDER BY status,tgl_awal\n Selain itu pada kode php juga mendeklarasikan dan memberi nilai awal $no = 1 untuk menampilkan nomor urut data dengan menggunakan looping while sebanyak data yang ada dalam database. Nomor yang ditampilkan bukanlah id dari database. \nSelain menampilkan data juga terdapat bagian status yang menggunakan kondisi ketika belum maka nilai awalnya adalah 0 namun ketika di klik maka akan melakukan fungsi ubah_status (yang akan kita buat nanti) menjadi 1 atau sudah begitupun sebaliknya jika data statusnya sudah. \nAda juga tombol ubah dan hapus, dimana tombol ubah berfungsi untuk mengubah data pada baris yang dipilih dan hapus juga akan menghapus data pada baris yang dipilih. \n &lt;?php\nif (isset($_POST['simpan'])) {\n    if (isset($_POST['id'])) {\n        $ubah = mysqli_query($mysqli, \"UPDATE kegiatan SET \n                                        isi = '\" . $_POST['isi'] . \"',\n                                        tgl_awal = '\" . $_POST['tgl_awal'] . \"',\n                                        tgl_akhir = '\" . $_POST['tgl_akhir'] . \"'\n                                        WHERE\n                                        id = '\" . $_POST['id'] . \"'\");\n    } else {\n        $tambah = mysqli_query($mysqli, \"INSERT INTO kegiatan(isi,tgl_awal,tgl_akhir,status) \n                                        VALUES ( \n                                            '\" . $_POST['isi'] . \"',\n                                            '\" . $_POST['tgl_awal'] . \"',\n                                            '\" . $_POST['tgl_akhir'] . \"',\n                                            '0'\n                                            )\");\n    }\n\n    echo \"&lt;script&gt; \n            document.location='index.php';\n            &lt;/script&gt;\";\n}\n\nif (isset($_GET['aksi'])) {\n    if ($_GET['aksi'] == 'hapus') {\n        $hapus = mysqli_query($mysqli, \"DELETE FROM kegiatan WHERE id = '\" . $_GET['id'] . \"'\");\n    } else if ($_GET['aksi'] == 'ubah_status') {\n        $ubah_status = mysqli_query($mysqli, \"UPDATE kegiatan SET \n                                        status = '\" . $_GET['status'] . \"' \n                                        WHERE\n                                        id = '\" . $_GET['id'] . \"'\");\n    }\n\n    echo \"&lt;script&gt; \n            document.location='index.php';\n            &lt;/script&gt;\";\n}\n?&gt;\nKode tersebut merupakan bagian dari skrip PHP yang digunakan untuk memproses data yang dikirim melalui formulir atau melalui parameter pada URL. Berikut adalah penjelasan baris per baris: \nDengan menggunakan kode di atas, data yang dikirim melalui formulir akan diproses dan disimpan atau diubah dalam tabel “kegiatan” berdasarkan tindakan yang diambil. Jika terdapat permintaan melalui parameter pada URL, seperti menghapus data atau mengubah status, tindakan tersebut akan dieksekusi dan kemudian pengguna akan diarahkan kembali ke halaman “index.php”."
  },
  {
    "objectID": "8_studi_kasus_poliklinik.html#studi-kasus-poliklinik-sederhana",
    "href": "8_studi_kasus_poliklinik.html#studi-kasus-poliklinik-sederhana",
    "title": "Poliklinik",
    "section": "Studi Kasus Poliklinik Sederhana",
    "text": "Studi Kasus Poliklinik Sederhana\nDalam studi kasus poliklinik mahasiswa dapat membuat web sederhana mengenai poliklinik dengan beberapa halaman, diantaranya adalah home, data master (berisi data dokter dan pasien), dan periksa. Pada web tersebut dilengkapi dengan navbar untuk berpindah dari setiap halaman. Pada setiap halaman dapat melakukan CRUD (Create Read Update Delete) sesuai dengan tabel dan kebutuhan halaman tersebut dalam database.\n\n\n\n\nPreview Poliklinik\n\n\n\n\n\nPreview Dokter\n\n\n\n\n\nPreview Pasien\n\n\n\n\n\nPreview Periksa"
  },
  {
    "objectID": "8_studi_kasus_poliklinik.html#database",
    "href": "8_studi_kasus_poliklinik.html#database",
    "title": "Poliklinik",
    "section": "Database",
    "text": "Database\nMembuat database baru pada localhost/phpmyadmin dengan nama poliklinik. setelah itu dapat membuat tabel-tabel yang diperlukan, yaitu tabel dokter, tabel pasien, tabel periksa. \n\n\n\nTabel Database Poliklinik\n\n\n Tabel Dokter dan Pasien bisa dikatakan memiliki hubungan many-to-many, jika setiap dokter dapat melayani banyak pasien, dan setiap pasien dapat ditangani banyak dokter. Sehingga diperlukan adanya tabel penghubung dari kedua tabel tersebut, yaitu tabel periksa.\nBuatlah tabel-tabel yang diperlukan untuk membuat web mengenai poliklinik sesuai dengan yang telah diperlajari pada Praktik Database.\n\n\n1. Tabel Dokter\n Pada tabel dokter dapat menyimpan id, nama, alamat dan nomor hp. Pada tabel tersebut id merupakan primary key dengan tipe data integer, pada field nama, alamat, dan nomor hp memiliki tipe data varchar. \n\n\n\nTabel Dokter\n\n\n\nCREATE TABLE `poliklinik`.`dokter` (\n    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT , \n    `nama` VARCHAR(255) NULL DEFAULT NULL , \n    `alamat` VARCHAR(255) NULL DEFAULT NULL , \n    `no_hp` VARCHAR(50) NULL DEFAULT NULL , \n    PRIMARY KEY (`id`)) ENGINE = InnoDB;\n Id pada setiap tabel ditambahkan dengan auto increment, sehingga id akan secara otomatis menambahkan data integer secara berurut pada setiap id tabel. Dari contoh tabel dokter di atas dapat dilanjutkan dengan membuat 2 tabel lainnya, yaitu tabel pasien dan tabel periksa.\n\n\n2. Pasien\n Pada tabel pasien dapat menyimpan id, data nama, alamat, dan nomor hp. Primary key terletak pada id dengan tipe data integer, pada field nama, alamat dan nomor hp bertipe data varchar. \n\n\n3. Periksa\n Pada tabel periksa menyimpan data id periksa, id dokter, id pasien, tanggal periksa dan catatan. Pada tabel periksa saling terhubung dengan tabel dokter dan pasien melalui id dokter dan id pasien. id dokter dan id pasien berperan sebagai foreign key."
  },
  {
    "objectID": "8_studi_kasus_poliklinik.html#koneksi",
    "href": "8_studi_kasus_poliklinik.html#koneksi",
    "title": "Poliklinik",
    "section": "Koneksi",
    "text": "Koneksi\nKoneksi merupakan penghubung antara database dengan web yang dibuat. \n&lt;?php \n$databaseHost = 'localhost';\n$databaseName = 'poliklinik';\n$databaseUsername = 'root';\n$databasePassword = '';\n \n$mysqli = mysqli_connect($databaseHost, \n    $databaseUsername, $databasePassword, $databaseName);\n\nSama seperti studi kasus sebelumnya, dimana untuk menghubungkan SQL dengan PHP digunakan fungsi mysqli_connect dengan parameter host, username, password, dan nama dari database. Untuk mengingat kembali mengenai koneksi dapat membuka kembali pada studi kasus sebelumnya atau klik disini"
  },
  {
    "objectID": "8_studi_kasus_poliklinik.html#index",
    "href": "8_studi_kasus_poliklinik.html#index",
    "title": "Poliklinik",
    "section": "Index",
    "text": "Index\nSetelah membuat file koneksi, maka perlu load kode koneksi tersebut ke file php yang akan dibuat.  Untuk membuat tampilan yang responsive dapat load atau install Bootstrap dengan menggunakan kode url yang disediakan pada web Bootstrap atau mendownload paket yang disediakan oleh Bootstrap.\n\nIndex\nPada bagian index akan menampilkan home atau dashboard dari web poliklinik yang berisikan navbar dan ucapan selamat datang di website poliklinik. \n\n\n\nPreview Poliklinik\n\n\n\nNavbar \nUntuk membuat navbar dapat membuka bootstrap dan mencari pada kolom pencarian yang telah disediakan dengan kata kunci nav atau navbar.\n\n\n\nNavbar Bootstrap\n\n\nCarilah navbar yang sesuai dengan navbar yang ada pada tampilan home poliklinik di atas. Pada navbar ditampilkan nama website, home, dropdown yang berisi dokter dan pasien, dan yang terakhir adalah periksa. Modifikasi kode navbar dari Bootstrap, hapus bagian yang tidak digunakan. \n&lt;nav class=\"navbar navbar-expand-lg  navbar-dark bg-dark\"&gt;\n  &lt;div class=\"container-fluid\"&gt;\n    &lt;a class=\"navbar-brand\" href=\"#\"&gt;\n      Sistem Informasi Poliklinik\n    &lt;/a&gt;\n    &lt;button class=\"navbar-toggler\"\n    type=\"button\" data-bs-toggle=\"collapse\"\n    data-bs-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"&gt;\n    &lt;/button&gt;\n    &lt;div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\"&gt;\n      &lt;ul class=\"navbar-nav\"&gt;\n        &lt;li class=\"nav-item\"&gt;\n          &lt;a class=\"nav-link\" aria-current=\"page\" href=\"index.php\"&gt;\n            Home\n          &lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=\"nav-item dropdown\"&gt;\n          &lt;a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\"\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\"&gt;\n            Data Master\n          &lt;/a&gt;\n          &lt;ul class=\"dropdown-menu\"&gt;\n            &lt;li&gt;\n              &lt;a class=\"dropdown-item\" href=\"index.php?page=dokter\"&gt;\n                Dokter\n              &lt;/a&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;a class=\"dropdown-item\" href=\"index.php?page=pasien\"&gt;\n                Pasien\n              &lt;/a&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li class=\"nav-item\"&gt;\n          &lt;a class=\"nav-link\" \n          href=\"index.php?page=periksa\"&gt;\n            Periksa\n          &lt;/a&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\nPada bagian href untuk mengarahkan atau berpindah halaman web dapat langsung menuliskan nama/path file, untuk file dinamis maka dapat menuliskan alamat href seperti berikut. \nDari kode diatas melalui file index dapat menampilkan tampilan atau data sesuai dengan parameter yang dimasukkan, misalnya tampilan halaman dokter.\nMembuat tampilan dinamis. \nMasih pada file index, setelah menuliskan kode untuk menampilkan navbar adalah menuliskan kode untuk menampilkan tampilan dinamis sesuai dengan halaman yang dipilih pada navbar. \nTampilan dinamis merupakan kemampuan sebuah aplikasi atau halaman web untuk menyesuaikan dan mengubah kontennya secara dinamis berdasarkan input, data, atau kondisi tertentu. Dengan tampilan dinamis, halaman web dapat menampilkan konten yang berbeda untuk setiap pengguna atau situasi yang berbeda. \n&lt;main role=\"main\" class=\"container\"&gt;\n    &lt;?php\n    if (isset($_GET['page'])) {\n    ?&gt;\n        &lt;h2&gt;&lt;?php echo ucwords($_GET['page']) ?&gt;&lt;/h2&gt;\n    &lt;?php\n        include($_GET['page'] . \".php\");\n    } else {\n        echo \"Selamat Datang di Sistem Informasi Poliklinik\";\n    }\n    ?&gt;\n&lt;/main&gt;\n\nKode tersebut menunjukkan cara dinamis untuk menampilkan halaman berdasarkan nilai parameter “page” dalam URL. Jika parameter “page” ada, maka konten halaman akan bervariasi sesuai dengan nilai tersebut. Jika tidak ada parameter “page”, maka halaman akan menampilkan pesan selamat datang. \n\n\nDokter\nPada halaman dokter.php menampilkan form, tabel dan beberapa tombol. Seperti pada program to do list, gunakan source code class tabel yang sesuai pada Bootstrap. \n\nForm\n Setelah tag form tambahkan kode php untuk menampilkan isi dari tabel yang dipilih ketika melakukan perintah ubah atau update, berdasarkan id dari baris yang akan diubah dengan menggunakan metode get. \n\n\n\n\n\n\nForm Dokter\n\n\n\n\n \n\n\n\n\n\nUbah Dokter\n\n\n\n\n\n Kode berikut ditambahkan setelah tag form dan sebelum input nama.\n&lt;?php\n$isi = '';\n$tgl_awal = '';\n$tgl_akhir = '';\nif (isset($_GET['id'])) {\n    $ambil = mysqli_query($mysqli, \"SELECT * FROM kegiatan \n    WHERE id='\" . $_GET['id'] . \"'\");\n    while ($row = mysqli_fetch_array($ambil)) {\n        $isi = $row['isi'];\n        $tgl_awal = $row['tgl_awal'];\n        $tgl_akhir = $row['tgl_akhir'];\n    }\n?&gt;\n    &lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $_GET['id'] ?&gt;\"&gt;\n&lt;?php\n}\n?&gt;\n\n\n\nTabel\n\npada bagian tabel sama dengan form dapat mencari kelas Bootstrap yang sesuai dan modifikasi sesuai kebutuhan. Pada bagian tabel body seperti berikut : \n&lt;?php\n$result = mysqli_query($mysqli, \"SELECT * FROM dokter\");\n$no = 1;\nwhile ($data = mysqli_fetch_array($result)) {\n?&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;?php echo $no++ ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['nama'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['alamat'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['no_hp'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a class=\"btn btn-success rounded-pill px-3\" href=\"index.php?page=dokter&id=&lt;?php echo $data['id'] ?&gt;\"&gt;Ubah&lt;/a&gt;\n            &lt;a class=\"btn btn-danger rounded-pill px-3\" href=\"index.php?page=dokter&id=&lt;?php echo $data['id'] ?&gt;&aksi=hapus\"&gt;Hapus&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;?php\n}\n?&gt;\n\n\n\nPasien\n\nPada halaman pasien.php menampilkan form dan tabel yang sama dengan halaman dokter, sehingga dapat memodifikasi kode-kode dari dari halaman dokter untuk disesuaikan ada halaman pasien."
  },
  {
    "objectID": "8_studi_kasus_poliklinik.html#periksa-1",
    "href": "8_studi_kasus_poliklinik.html#periksa-1",
    "title": "Poliklinik",
    "section": "Periksa",
    "text": "Periksa\n\nPada halaman periksa.php untuk kelas tabel dan form yang digunakan sama dengan halaman-halaman sebelumnya. Namun ada perbedaan pada fungsi php yang digunakan, misalnya pada bagian input dokter. \n &lt;div class=\"form-group mx-sm-3 mb-2\"&gt;\n    &lt;label for=\"inputPasien\" class=\"sr-only\"&gt;Pasien&lt;/label&gt;\n    &lt;select class=\"form-control\" name=\"id_pasien\"&gt;\n        &lt;?php\n        $selected = '';\n        $pasien = mysqli_query($mysqli, \"SELECT * FROM pasien\");\n        while ($data = mysqli_fetch_array($pasien)) {\n            if ($data['id'] == $id_pasien) {\n                $selected = 'selected=\"selected\"';\n            } else {\n                $selected = '';\n            }\n        ?&gt;\n            &lt;option value=\"&lt;?php echo $data['id'] ?&gt;\" &lt;?php echo $selected ?&gt;&gt;&lt;?php echo $data['nama'] ?&gt;&lt;/option&gt;\n        &lt;?php\n        }\n        ?&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n\nSelain itu pada form yang digunakan juga terdapat form untuk input tanggal dan waktu sehingga digunakan tipe input “datetime-local”. Sehingga ketika akan mengisikan data akan muncul icon tanggal dan hanya perlu memilih tanggal dan waktu yang sesuai. \n\n\n\nForm Periksa\n\n\n\n&lt;?php\n$result = mysqli_query($mysqli, \"SELECT pr.*,d.nama as 'nama_dokter', p.nama as 'nama_pasien' FROM periksa pr LEFT JOIN dokter d ON (pr.id_dokter=d.id) LEFT JOIN pasien p ON (pr.id_pasien=p.id) ORDER BY pr.tgl_periksa DESC\");\n$no = 1;\nwhile ($data = mysqli_fetch_array($result)) {\n?&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;?php echo $no++ ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['nama_pasien'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['nama_dokter'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['tgl_periksa'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;?php echo $data['catatan'] ?&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a class=\"btn btn-success rounded-pill px-3\" \n            href=\"index.php?page=periksa&id=&lt;?php echo $data['id'] ?&gt;\"&gt;\n            Ubah&lt;/a&gt;\n            &lt;a class=\"btn btn-danger rounded-pill px-3\" \n            href=\"index.php?page=periksa&id=&lt;?php echo $data['id'] ?&gt;&aksi=hapus\"&gt;Hapus&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;?php\n}\n?&gt;\n\nKode tersebut merupakan contoh pengambilan data dari tabel “periksa” dalam database menggunakan MySQLi dengan menggunakan operasi LEFT JOIN untuk menggabungkan data dari tabel “dokter” dan “pasien”. Data tersebut kemudian ditampilkan dalam bentuk tabel pada halaman web. \nPertama, query SQL dieksekusi dengan menggunakan fungsi mysqli_query() untuk mengambil data dari tabel “periksa” dan melakukan JOIN dengan tabel “dokter” dan “pasien” berdasarkan ID dokter dan ID pasien yang terkait. Data tersebut kemudian disimpan dalam variabel $result. \nSelanjutnya, menggunakan loop while, setiap baris data dari hasil query (data) untuk membentuk baris dalam tabel. Pada setiap sel, data seperti nomor urut (no++), nama pasien (data[‘nama_pasien’]), nama dokter (data[‘nama_dokter’]), tanggal periksa (data[‘tgl_periksa’]), dan catatan (data[‘catatan’]) ditampilkan. \nSelain itu, pada setiap baris data, terdapat tautan “Ubah” dan “Hapus” yang mengarahkan ke halaman yang sesuai untuk mengedit atau menghapus data periksa. Tautan tersebut memiliki atribut href yang dinamis dengan menggunakan nilai ID periksa dari baris data saat ini (data[‘id’]). \nDengan menggunakan kode di atas, data periksa, termasuk informasi terkait dokter dan pasien, akan ditampilkan dalam bentuk tabel. Tautan “Ubah” dan “Hapus” memungkinkan pengguna untuk melakukan operasi edit dan hapus terhadap data periksa yang sesuai."
  },
  {
    "objectID": "1_konsep_dasar_web.html#apa-itu-pemrograman-web-hahahha",
    "href": "1_konsep_dasar_web.html#apa-itu-pemrograman-web-hahahha",
    "title": "1. Konsep Dasar Web Programmming",
    "section": "Apa itu Pemrograman Web? HAHAHHA",
    "text": "Apa itu Pemrograman Web? HAHAHHA\nPemrograman web adalah proses menciptakan dan mengembangkan aplikasi web menggunakan bahasa pemrograman, teknologi, dan standar web.\nAplikasi web dapat diakses melalui browser web dan memungkinkan pengguna untuk berinteraksi dengan konten dan layanan yang disediakan."
  },
  {
    "objectID": "studi_kasus.html#login-register-form",
    "href": "studi_kasus.html#login-register-form",
    "title": "Studi Kasus",
    "section": "Login & Register Form",
    "text": "Login & Register Form\nHello World!"
  },
  {
    "objectID": "studi_kasus.html#login-registrasi-form",
    "href": "studi_kasus.html#login-registrasi-form",
    "title": "Studi Kasus",
    "section": "Login & Registrasi Form",
    "text": "Login & Registrasi Form\nPada program Login & Registrasi Form, kita akan mempelajari banyak hal mengenai $_SESSION[], enkripsi password, controller sistem, penanganan lupa password, dan sebagainya. Studi kasus ini juga akan dibagi menjadi beberapa bagian, yaitu Part I dan Part II.\nTentunya selain materi-materi di atas, kita akan mengimplementasikan semua ilmu yang telah diajarkan dari Program To Do List hingga Poliklinik."
  },
  {
    "objectID": "11_studi_kasus_login.html#studi-kasus-program-login-registrasi-form",
    "href": "11_studi_kasus_login.html#studi-kasus-program-login-registrasi-form",
    "title": "Login & Registrasi Form",
    "section": "Studi Kasus Program Login & Registrasi Form",
    "text": "Studi Kasus Program Login & Registrasi Form\nHello World!"
  },
  {
    "objectID": "11_studi_kasus_login.html#studi-kasus-login-form",
    "href": "11_studi_kasus_login.html#studi-kasus-login-form",
    "title": "Login & Registrasi Form",
    "section": "Studi Kasus Login Form",
    "text": "Studi Kasus Login Form\n\nAcapkali berbagai macam situs website menawarkan kepada kita untuk bergabung sebagai komunitas, anggota, atau member. Sebagai contoh, LMS Kulino yang tengah kita pakai saat ini mewajibkan user-nya untuk masuk ke dalam sistem tersebut dengan menggunakan username dan password yang telah terdaftar. Apabila user belum terdaftar, maka akan diarahkan menuju formulir registrasi untuk melakukan pendaftaran akun baru pada laman tersebut.\nDari formulir registrasi dan login tersebut, pada studi kasus kali ini kita akan menelaah hal-hal apa sajakah yang dibutuhkan untuk membangun komponen yang ada di dalam sistem registrasi serta login tersebut. Hal ini mencakup berbagai hal termasuk sessions, authentication, dan sebagainya di dalam modul ini. So, what are you waiting for? Let’s get started, Champ!"
  },
  {
    "objectID": "11_studi_kasus_login.html",
    "href": "11_studi_kasus_login.html",
    "title": "Login & Registrasi Form",
    "section": "",
    "text": "Controller"
  },
  {
    "objectID": "11_studi_kasus_login.html#merancang-database",
    "href": "11_studi_kasus_login.html#merancang-database",
    "title": "Login & Registrasi Form",
    "section": "Merancang Database",
    "text": "Merancang Database\n\nFirst things first, yang perlu kita persiapkan adalah database. Buatlah database baru dengan nama account. Database tersebut nantinya akan kita gunakan dalam pembuatan studi kasus kita kali ini. Setelah berhasil dibuat, kita membuat tabel dengan nama usertable yang di dalamnya memuat id, name, email, password, code, dan status. Anda dapat membuatnya secara manual atau bisa juga salin kueri SQL berikut ini:\n\nCREATE TABLE `usertable` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `name` varchar(255) NOT NULL,\n    `email` varchar(255) NOT NULL,\n    `password` varchar(255) NOT NULL,\n    `code` mediumint(50) NOT NULL,\n    `status` text NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;"
  },
  {
    "objectID": "11_studi_kasus_login.html#koneksi-ke-database",
    "href": "11_studi_kasus_login.html#koneksi-ke-database",
    "title": "Login & Registrasi Form",
    "section": "Koneksi ke Database",
    "text": "Koneksi ke Database\n\nMasih ingat dengan prosedur pengkoneksian ke database phpMyAdmin? Ya, tentu saja, kita akan menerapkan konsep yang sama seperti studi kasus sebelumnya dalam hal ini. Namun apabila Anda lupa, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$database = \"account\";\n\n$con = new mysqli($host, $username, $password, $database);\n\nif ($con-&gt;connect_error) {\n    die(\"Connection failed: \" . $con-&gt;connect_error);\n}"
  },
  {
    "objectID": "11_studi_kasus_login.html#membuat-formulir-registrasi",
    "href": "11_studi_kasus_login.html#membuat-formulir-registrasi",
    "title": "Login & Registrasi Form",
    "section": "Membuat Formulir Registrasi",
    "text": "Membuat Formulir Registrasi\n\nLangkah awal dari studi kasus ini adalah membuat formulir registrasi. Sangat sederhana hanya membutuhkan beberapa inputan data, seperti nama lengkap, email, password, dan konfirmasi ulang password. Gunakan konsep yang sama di saat pembuatan formulir studi kasus sebelumnya. Berikan nama file registrasi tersebut dengan nama signup-user.php.\n\n\n\n\nFigure 1: Preview Halaman Registrasi (signup-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di signup-user.php\n\n\nKomponen\nValue\n\n\n\n\nNama Lengkap\nname=“name”\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nKonfirmasi Password\nname=“cpassword”\n\n\nButton Signup\nname=“signup”\n\n\n\n\nSelain itu, untuk penanganan error dari segala kemungkinan masalah yang dapat terjadi, salin kode berikut ini dengan menempatkannya setelah paragraf “Mudah. Cepat. Praktis.” dan sebelum kotak inputan pertama, yaitu Nama Lengkap.\n\n&lt;?php\n    if (count($errors) == 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    } elseif (count($errors) &gt; 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n        ?&gt;\n            &lt;li&gt;&lt;?php echo $showerror; ?&gt;&lt;/li&gt;\n        &lt;?php } ?&gt;\n    &lt;/div&gt;\n&lt;?php } ?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login.html#membuat-halaman-login",
    "href": "11_studi_kasus_login.html#membuat-halaman-login",
    "title": "Login & Registrasi Form",
    "section": "Membuat Halaman Login",
    "text": "Membuat Halaman Login\n\nSetelah halaman pendaftaran selesai dibuat, selanjutnya kita akan beralih ke halaman login (login-user.php). Pada halaman login ini cukup simple, karena kita hanya membutuhkan 2 inputan data, yaitu email dan password. Cara penyusunan halaman tersebut terbilang sama dengan halaman registrasi, yang membedakan hanya handling disaat error saja.\n\n\n\n\nFigure 2: Preview Halaman Login (login-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di login-user.php\n\n\nKomponen\nValue\n\n\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nButton Login\nname=“login”\n\n\n\n\nUntuk menangani permasalahan jika terjadi error, Anda dapat menyalin kode di bawah ini; harap letakkan kode berikut setelah paragraf “Masuk dengan email dan password Anda” dan sebelum kotak inputan email:\n\n&lt;?php\n    if (count($errors) &gt; 0) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login.html#pengantar",
    "href": "11_studi_kasus_login.html#pengantar",
    "title": "Login & Registrasi Form",
    "section": "Pengantar",
    "text": "Pengantar\n\nAcapkali berbagai macam situs website menawarkan kepada kita untuk bergabung sebagai komunitas, anggota, atau peserta. Sebagai contoh, LMS Kulino yang tengah kita pakai saat ini mewajibkan user-nya untuk masuk ke dalam sistem tersebut dengan menggunakan username dan password yang telah terdaftar. Apabila user belum terdaftar, maka mereka akan diarahkan menuju formulir registrasi untuk melakukan pendaftaran akun baru pada laman tersebut.\nDari formulir registrasi dan login tersebut, pada studi kasus kali ini kita akan menelaah hal-hal apa sajakah yang dibutuhkan untuk membangun komponen yang ada di dalam sistem registrasi serta login tersebut. Hal ini mencakup berbagai hal termasuk sessions, authentication, dan sebagainya di dalam modul ini. So, what are you waiting for? Let’s get started, Champ!"
  },
  {
    "objectID": "11_studi_kasus_login.html#merancang-forgot-password",
    "href": "11_studi_kasus_login.html#merancang-forgot-password",
    "title": "Login & Registrasi Form",
    "section": "Merancang Forgot Password",
    "text": "Merancang Forgot Password\n\nDi dalam container form login terdapat tautan “Forgot Password” atau “Lupa Kata Sandi”. Hal ini perlu kita lakukan guna apabila pengguna lupa terhadap kata sandi akun mereka. Sebelum memulai, perlu diketahui bahwa nantinya kita akan menerapkan konsep One-Time Password (OTP) untuk studi kasus ini.\nWell then, mari kita buat file baru dengan nama forgot-password.php. Konsep penyusunan halaman mengikuti alur yang sama seperti halaman-halaman sebelumnya.\n\n\n\n\nFigure 3: Preview Halaman Lupa Password (forgot-password.php)\n\n\n\nBerikan identitas pada tiap-tiap bagian, yaitu input-an alamat email dan button “Continue”. Untuk input-an email, name=\"email\"; dan button “Continue”, name=\"check-email\".\nPada halaman ini, input-an hanya berupa email dan email ini sebelumnya sudah harus terdaftar dalam sistem terlebih dahulu. Apabila email yang dimasukkan belum terdaftar, maka akan melemparkan alert atau notifikasi berupa “Akun email Anda belum terdaftar”. Praktisi dalam pembuatan kode halaman di atas dapat Anda susun sendiri atau bisa juga salin kode berikut ini:\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Forgot Password&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n            &lt;div class=\"col-md-4 offset-md-4 form\"&gt;\n                &lt;form action=\"forgot-password.php\" method=\"POST\" autocomplete=\"\"&gt;\n                    &lt;h2 class=\"text-center\"&gt;Forgot Password&lt;/h2&gt;\n                    &lt;p class=\"text-center\"&gt;Masukkan alamat email Anda&lt;/p&gt;\n                    &lt;?php\n                        if (count($errors) &gt; 0) {\n                    ?&gt;\n                        &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n                            &lt;?php\n                                foreach ($errors as $error) {\n                                    echo $error;\n                            }\n                            ?&gt;\n                        &lt;/div&gt;\n                    &lt;?php \n                        } \n                    ?&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Your email address\" required value=\"&lt;?php echo $email ?&gt;\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control button\" type=\"submit\" name=\"check-email\" value=\"Continue\"&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "11_studi_kasus_login.html#menangani-reset-password",
    "href": "11_studi_kasus_login.html#menangani-reset-password",
    "title": "Login & Registrasi Form",
    "section": "Menangani Reset Password",
    "text": "Menangani Reset Password\n\nSetelah pengiriman alamat email melalui halaman forgot-password.php di atas, selanjutnya kita harus memasukkan kode OTP terlebih dahulu yang di mana kode tersebut akan kita dapatkan melalui alamat email. Sebelum itu, jikalau Anda belum pernah men-setting pengaturan Simple Mail Transfer Protocol (SMTP), harap perhatikan dengan saksama penjelasan berikut ini:\n\nPergi ke dalam folder XAMPP Anda dan buka folder php\nGulir ke bawah hingga Anda menemukan file php.ini, setelah itu buka file tersebut. (Lihat Figure 4)\n\n\n\n\nFigure 4: File php.ini yang terdapat di direktori C:/xampp/php\n\n\n\nSetelah itu, klik kanan pada mouse &gt; Open with &gt; pilih Notepad\nDi dalam file php.ini tersebut, cari ‘SMTP’ dengan shortcut CTRL + F (Lihat Table 1)\n\n\n\nTable 1: Konfigurasi SMTP pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus tanda titik koma (;) pada tiap bagian-bagian yang diperlukan. Harap perhatikan dengan teliti tiap bagian yang dibutuhkan agar tidak menimbulkan error/kesalahan.\nUntuk bagian sendmail_from diisikan dengan alamat email aktif dan valid. Apabila Anda memiliki 2 akun email yang aktif, Anda dapat mempergunakan salah satunya.\nSelepas itu, gulir ke bawah sedikit, lalu Anda akan menemukan seperti pada Table 2 berikut ini:\n\n\n\nTable 2: Direktori Pengiriman Email pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus titik koma (;) pada bagian sendmail_path, lalu isikan dengan path/direktori yang sesuai dengan direktori XAMPP pada perangkat Anda atau Anda dapat menyalin direktori berikut ini:\n\n\"\\\"C:\\xampp\\sendmail\\sendmail.exe\\\" -t\"\n\nJangan lupa untuk disimpan (CTRL + S) kemudian tutup.\nSelanjutnya, kita beralih ke folder sendmail (C:/xampp/sendmail) dan buka file sendmail.ini\nPada file tersebut, Anda akan menemukan smtp_server=mail.mydomain.com, ganti isian daripada smtp_server menjadi smtp_server=smtp.gmail.com.\nLalu, di bawahnya terdapat smtp_port=25, ganti isian daripada smtp_port menjadi smtp_port=587.\nSelanjutnya gulir ke bawah, hingga Anda menemukan error_logfile=error.log dan debug_logfile=debug.log. Hapus titik koma (;) pada bagian depan kedua kode tersebut (Lihat Figure 5)\n\n\n\n\nFigure 5: Konfigurasi Enable Error dan Debug Logfile pada File sendmail.ini\n\n\n\nSetelah itu gulir ke bawah lagi, lalu Anda akan menemukan auth_username, auth_password, dan force_sender. Khusus auth_username dan force_sender isikan dengan alamat email Anda yang aktif dan valid (Lihat Figure 6)\n\n\n\n\nFigure 6: Konfigurasi Auth & Pengirim Email pada File sendmail.ini\n\n\n\nSelanjutnya teruntuk auth_password dapat Anda isikan dengan kombinasi password 16-karakter yang Anda dapatkan dari alamat email Google Account yang Anda isikan di bagian auth_username dan force_sender. Lantas bagaimana caranya?\nPergi ke https://myaccount.google.com/. Harap diperhatikan Anda wajib menggunakan akun email yang sama dengan alamat email yang telah Anda isikan pada Langkah ke-14.\nPada laman tersebut, terdapat panel yang berada di sisi kiri layar. Dari halaman “Beranda” atau “Home” beralihlah ke halaman “Keamanan” atau “Security”. Pada halaman tersebut, gulir ke bawah lalu Anda akan menemukan “Cara Anda login ke Google” atau “How you sign in to Google”\nPada bagian tersebut, klik “Verifikasi 2 Langkah” atau “2-Step Verification”. Apabila diminta, masukkan password akun email Anda, lalu Anda akan diminta untuk memverifikasi via Gmail atau nomor telepon dengan menggunakan kode verifikasi, contoh G-123456. Harap ikuti prosedur yang ada pada laman tersebut!\nSetelah berhasil masuk, Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 7: Halaman Verifikasi 2 Langkah\n\n\n\nDi dalam halaman tersebut, gulir ke paling bawah, hingga Anda menemukan section “Sandi aplikasi” atau “App password”. Klik section tersebut, lalu Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 8: Tampilan Halaman Sandi Aplikasi\n\n\n\nPada kotak yang ada di bawah, silakan Anda membuat sandi aplikasi yang baru dengan cara mengisikan judul aplikasi yang ingin Anda buat, sebagai contoh “BK-Login”. Setelah itu, klik button “Buat”\nAkan muncul pop-up, seperti pada gambar di bawah ini (Lihat Figure 9). Pada popup tersebutlah Anda mendapatkan password 16-karakter yang dapat Anda copy dan paste dan Anda isikan ke bagian auth_password di file sendmail.ini (Lihat Figure 6)\n\n\n\n\nFigure 9: Password 16-Karakter Aplikasi Anda\n\n\n\nAnda sudah siap!\n\nPengaturan konfigurasi SMTP Anda telah siap, sekarang kita akan melanjutkan proses pembuatan halaman verifikasi kode OTP. Buat file baru dan beri nama reset-code.php, di sini kode OTP akan berperan dalam memverifikasi pembuatan password baru atau saat lupa password atau yang lainnya. Seperti apakah bentuk dari halaman tersebut? Halaman reset-code.php sangatlah sederhana sekali seperti pada gambar berikut:\n\n\n\nFigure 10: Preview Halaman Verifikasi Reset Kode OTP (reset-code.php)\n\n\nPada halaman tersebut berikan identitas pada tiap-tiap bagian. Untuk kotak input-an kode OTP berikan atribut dan value → name=\"otp\" dan untuk button “Submit” → name=\"check-reset-otp\".\nSalah satu hal yang perlu diperhatikan dalam halaman ini adalah sessions yang diambil dari alamat email yang terdaftar pada sistem. Oleh karena itu, kita perlu melampirkan sessions di atas halaman. Salin kode berikut dan letakkan di atas halaman PHP Anda:\n&lt;?php\n    $email = $_SESSION['email'];\n    if ($email == false) {\n        header('Location: login-user.php');\n    }\n?&gt;\nSetelah itu, buatlah kode untuk menampilkan informasi baik itu kode OTP telah dikirimkan melalui email atau notifikasi kemungkinan terjadinya error. Untuk penanganan error, gunakan cara/konsep yang sama seperti halnya pada halaman forgot-password.php. Sedangkan untuk menampilkan notifikasi bahwa kode OTP telah dikirimkan ke email, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n    if (isset($_SESSION['info'])) {\n?&gt;\n    &lt;div class=\"alert alert-success text-center\"&gt;\n        &lt;?php echo $_SESSION['info']; ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login.html#memverifikasi-akun-baru",
    "href": "11_studi_kasus_login.html#memverifikasi-akun-baru",
    "title": "Login & Registrasi Form",
    "section": "Memverifikasi Akun Baru",
    "text": "Memverifikasi Akun Baru\n\nPada bagian ini konsep yang digunakan mirip dengan bagian sebelumnya. Namun, halaman ini dibuat khusus untuk memverifikasi akun yang baru saja dibuat. Hal ini ditujukan supaya akun baru tersebut statusnya berubah dari not verified menjadi verified. Untuk tampilannya daripada halaman user-otp.php ini tidak jauh berbeda dengan yang sebelumnya. Berikut ini tampilan dari halaman tersebut:\n\n\n\nFigure 11: Preview Halaman Verifikasi Akun Baru (user-otp.php)\n\n\nJangan lupa untuk beri identitas pada tiap bagiannya. Untuk input-an kode OTP berikan name=\"otp\" dan button “Submit” dengan name=\"check\". Tidak perlu khawatir, Anda dapat menyalin semua kode Anda yang terdapat di halaman reset-code.php ke halaman user-otp.php, ini termasuk semua komponen yang ada di dalamnya! Hanya identitas saja yang perlu diubah."
  },
  {
    "objectID": "11_studi_kasus_login.html#membentuk-password-baru",
    "href": "11_studi_kasus_login.html#membentuk-password-baru",
    "title": "Login & Registrasi Form",
    "section": "Membentuk Password Baru",
    "text": "Membentuk Password Baru\n\nNew Commit"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Junior Web Developer",
    "section": "",
    "text": "Pengantar\nPelatihan Web Developer terbagi menjadi dua tahap (kelas) yaitu Junior Web Developer dan Web Developer. Materi yang diajarkan pada kedua kelas berbeda namun berkelanjutan. Pada modul Junior Web Developer berisi tentang dasar-dasar dari pemrograman web dengan permasalahan yang sering dialami mahasiswa. Sedangkan pada modul Web Developer berisi materi pemrograman web dengan menggunakan framework. Sehingga peserta yang lulus pada setiap kelas berhak melanjutkan ke kelas selanjutnya."
  },
  {
    "objectID": "index.html#materi-junior-web-developer",
    "href": "index.html#materi-junior-web-developer",
    "title": "Junior Web Developer",
    "section": "Materi Junior Web Developer",
    "text": "Materi Junior Web Developer\nTerdapat topik-topik dan materi-materi yang akan diajarkan, diantaranya sebagai berikut:\n\n\nTopik dan Materi Junior Web Developer\n\n\n\n\n\n\n\nTopik\nMateri\nOutcome\n\n\n\n\nWeb Developments Fundamentals \n1. Konsep Dasar Pemrograman Berbasis Web  2. Pengenalan Tools (J.620100.001.01), Library, komponen dan Framework pemrograman berbasis web (J.620100.003.01) \nPeserta memahami konsep dasar pemrograman berbasis web, mengenal tools, library, framework yang diperlukan untuk mengembangkan aplikasi berbasis web \n\n\nMelakukan Migrasi ke Teknologi Baru (J.620100.024.02) \n1. Pengenalan Responsive Web Design (Mobile First),  2. Praktek Instalasi Bootstrap Framework \nPeserta memiliki pengetahuan mengenai teknologi terkini dalam pembangunan aplikasi berbasis web dan cara menggunakannya \n\n\nMenerapkan Rancangan User Interface / User Experience (UI/UX) (J.620100.006.01) dan alert notification jika terdapat suatu permasalahan pada aplikasi (J.620100.044.01) \nPraktek mengimplementasikan design UI halaman depan (front page) aplikasi To Do List menggunakan Bootstrap \nPeserta dapat menerapkan rancangan UI/UX dan alert notification dari project yang diberikan \n\n\nKonsep Basis Data Dan Menggunakan SQL (J.620100.020.02)\n1. Review Konsep Basis Data  2. Query SQL: DDL, DML  3. Praktek membuat database dan tabel aplikasi To Do List \nPeserta memiliki pengetahuan mengenai konsep Basis Data dan menggunakan Database Management System (DBMS) berbasis SQL \n\n\nMenerapkan Pemrograman Terstruktur (J.620100.017.02) Dan Akses Basis Data (J.620100.021.02) \nPraktek pembuatan Aplikasi To Do List  Praktek Studi Kasus aplikasi Poliklinik (langkah-langkah pembuatan) \nPeserta mampu menerapkan konsep dasar pemrograman terstruktur dan mengakses basis data menggunakan kode program \n\n\nDebugging, Pengujian Program dan Code Review (J.620100.025.02, J.620100.036.02, J.620100.032.01) \nPengenalan Tool untuk melakukan pengujian aplikasi berbasis web   Praktek software testing aplikasi Poliklinik \nPeserta mampu melakukan debugging, pengujian program, meninjau dan memeriksa kode program yang telah dibuat \n\n\nPembaruan Perangkat Lunak pada Web Dasar (J.620100.047.01)\nPraktek mengembangkan aplikasi Poliklinik  Penilaian final project \nPeserta dapat menambahkan fitur tambahan dari project web yang diberikan"
  },
  {
    "objectID": "12_studi_kasus_login.html#pengantar",
    "href": "12_studi_kasus_login.html#pengantar",
    "title": "Login & Registrasi Form",
    "section": "Pengantar",
    "text": "Pengantar\n\nAcapkali berbagai macam situs website menawarkan kepada kita untuk bergabung sebagai komunitas, anggota, atau peserta. Sebagai contoh, LMS Kulino yang tengah kita pakai saat ini mewajibkan user-nya untuk masuk ke dalam sistem tersebut dengan menggunakan username dan password yang telah terdaftar. Apabila user belum terdaftar, maka mereka akan diarahkan menuju formulir registrasi untuk melakukan pendaftaran akun baru pada laman tersebut.\nDari formulir registrasi dan login tersebut, pada studi kasus kali ini kita akan menelaah hal-hal apa sajakah yang dibutuhkan untuk membangun komponen yang ada di dalam sistem registrasi serta login tersebut. Hal ini mencakup berbagai hal termasuk sessions, authentication, dan sebagainya di dalam modul ini. So, what are you waiting for? Let’s get started, Champ!"
  },
  {
    "objectID": "12_studi_kasus_login.html#merancang-database",
    "href": "12_studi_kasus_login.html#merancang-database",
    "title": "Login & Registrasi Form",
    "section": "Merancang Database",
    "text": "Merancang Database\n\nFirst things first, yang perlu kita persiapkan adalah database. Buatlah database baru dengan nama account. Database tersebut nantinya akan kita gunakan dalam pembuatan studi kasus kita kali ini. Setelah berhasil dibuat, kita membuat tabel dengan nama usertable yang di dalamnya memuat id, name, email, password, code, dan status. Anda dapat membuatnya secara manual atau bisa juga salin kueri SQL berikut ini:\n\nCREATE TABLE `usertable` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `name` varchar(255) NOT NULL,\n    `email` varchar(255) NOT NULL,\n    `password` varchar(255) NOT NULL,\n    `code` mediumint(50) NOT NULL,\n    `status` text NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;"
  },
  {
    "objectID": "12_studi_kasus_login.html#koneksi-ke-database",
    "href": "12_studi_kasus_login.html#koneksi-ke-database",
    "title": "Login & Registrasi Form",
    "section": "Koneksi ke Database",
    "text": "Koneksi ke Database\n\nMasih ingat dengan prosedur pengkoneksian ke database phpMyAdmin? Ya, tentu saja, kita akan menerapkan konsep yang sama seperti studi kasus sebelumnya dalam hal ini. Namun apabila Anda lupa, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$database = \"account\";\n\n$con = new mysqli($host, $username, $password, $database);\n\nif ($con-&gt;connect_error) {\n    die(\"Connection failed: \" . $con-&gt;connect_error);\n}"
  },
  {
    "objectID": "12_studi_kasus_login.html#membuat-formulir-registrasi",
    "href": "12_studi_kasus_login.html#membuat-formulir-registrasi",
    "title": "Login & Registrasi Form",
    "section": "Membuat Formulir Registrasi",
    "text": "Membuat Formulir Registrasi\n\nLangkah awal dari studi kasus ini adalah membuat formulir registrasi. Sangat sederhana hanya membutuhkan beberapa inputan data, seperti nama lengkap, email, password, dan konfirmasi ulang password. Gunakan konsep yang sama di saat pembuatan formulir studi kasus sebelumnya. Berikan nama file registrasi tersebut dengan nama signup-user.php.\n\n\n\n\nFigure 1: Preview Halaman Registrasi (signup-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di signup-user.php\n\n\nKomponen\nValue\n\n\n\n\nNama Lengkap\nname=“name”\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nKonfirmasi Password\nname=“cpassword”\n\n\nButton Signup\nname=“signup”\n\n\n\n\nSelain itu, untuk penanganan error dari segala kemungkinan masalah yang dapat terjadi, salin kode berikut ini dengan menempatkannya setelah paragraf “Mudah. Cepat. Praktis.” dan sebelum kotak inputan pertama, yaitu Nama Lengkap.\n\n&lt;?php\n    if (count($errors) == 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    } elseif (count($errors) &gt; 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n        ?&gt;\n            &lt;li&gt;&lt;?php echo $showerror; ?&gt;&lt;/li&gt;\n        &lt;?php } ?&gt;\n    &lt;/div&gt;\n&lt;?php } ?&gt;"
  },
  {
    "objectID": "12_studi_kasus_login.html#membuat-halaman-login",
    "href": "12_studi_kasus_login.html#membuat-halaman-login",
    "title": "Login & Registrasi Form",
    "section": "Membuat Halaman Login",
    "text": "Membuat Halaman Login\n\nSetelah halaman pendaftaran selesai dibuat, selanjutnya kita akan beralih ke halaman login (login-user.php). Pada halaman login ini cukup simple, karena kita hanya membutuhkan 2 inputan data, yaitu email dan password. Cara penyusunan halaman tersebut terbilang sama dengan halaman registrasi, yang membedakan hanya handling disaat error saja.\n\n\n\n\nFigure 2: Preview Halaman Login (login-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di login-user.php\n\n\nKomponen\nValue\n\n\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nButton Login\nname=“login”\n\n\n\n\nUntuk menangani permasalahan jika terjadi error, Anda dapat menyalin kode di bawah ini; harap letakkan kode berikut setelah paragraf “Masuk dengan email dan password Anda” dan sebelum kotak inputan email:\n\n&lt;?php\n    if (count($errors) &gt; 0) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "12_studi_kasus_login.html#merancang-forgot-password",
    "href": "12_studi_kasus_login.html#merancang-forgot-password",
    "title": "Login & Registrasi Form",
    "section": "Merancang Forgot Password",
    "text": "Merancang Forgot Password\n\nDi dalam container form login terdapat tautan “Forgot Password” atau “Lupa Kata Sandi”. Hal ini perlu kita lakukan guna apabila pengguna lupa terhadap kata sandi akun mereka. Sebelum memulai, perlu diketahui bahwa nantinya kita akan menerapkan konsep One-Time Password (OTP) untuk studi kasus ini.\nWell then, mari kita buat file baru dengan nama forgot-password.php. Konsep penyusunan halaman mengikuti alur yang sama seperti halaman-halaman sebelumnya.\n\n\n\n\nFigure 3: Preview Halaman Lupa Password (forgot-password.php)\n\n\n\nBerikan identitas pada tiap-tiap bagian, yaitu input-an alamat email dan button “Continue”. Untuk input-an email, name=\"email\"; dan button “Continue”, name=\"check-email\".\nPada halaman ini, input-an hanya berupa email dan email ini sebelumnya sudah harus terdaftar dalam sistem terlebih dahulu. Apabila email yang dimasukkan belum terdaftar, maka akan melemparkan alert atau notifikasi berupa “Akun email Anda belum terdaftar”. Praktisi dalam pembuatan kode halaman di atas dapat Anda susun sendiri atau bisa juga salin kode berikut ini:\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Forgot Password&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n            &lt;div class=\"col-md-4 offset-md-4 form\"&gt;\n                &lt;form action=\"forgot-password.php\" method=\"POST\" autocomplete=\"\"&gt;\n                    &lt;h2 class=\"text-center\"&gt;Forgot Password&lt;/h2&gt;\n                    &lt;p class=\"text-center\"&gt;Masukkan alamat email Anda&lt;/p&gt;\n                    &lt;?php\n                        if (count($errors) &gt; 0) {\n                    ?&gt;\n                        &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n                            &lt;?php\n                                foreach ($errors as $error) {\n                                    echo $error;\n                            }\n                            ?&gt;\n                        &lt;/div&gt;\n                    &lt;?php \n                        } \n                    ?&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Your email address\" required value=\"&lt;?php echo $email ?&gt;\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control button\" type=\"submit\" name=\"check-email\" value=\"Continue\"&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "12_studi_kasus_login.html#menangani-reset-password",
    "href": "12_studi_kasus_login.html#menangani-reset-password",
    "title": "Login & Registrasi Form",
    "section": "Menangani Reset Password",
    "text": "Menangani Reset Password\n\nSetelah pengiriman alamat email melalui halaman forgot-password.php di atas, selanjutnya kita harus memasukkan kode OTP terlebih dahulu yang di mana kode tersebut akan kita dapatkan melalui alamat email. Sebelum itu, jikalau Anda belum pernah men-setting pengaturan Simple Mail Transfer Protocol (SMTP), harap perhatikan dengan saksama penjelasan berikut ini:\n\nPergi ke dalam folder XAMPP Anda dan buka folder php\nGulir ke bawah hingga Anda menemukan file php.ini, setelah itu buka file tersebut. (Lihat Figure 4)\n\n\n\n\nFigure 4: File php.ini yang terdapat di direktori C:/xampp/php\n\n\n\nSetelah itu, klik kanan pada mouse &gt; Open with &gt; pilih Notepad\nDi dalam file php.ini tersebut, cari ‘SMTP’ dengan shortcut CTRL + F (Lihat Table 1)\n\n\n\nTable 1: Konfigurasi SMTP pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus tanda titik koma (;) pada tiap bagian-bagian yang diperlukan. Harap perhatikan dengan teliti tiap bagian yang dibutuhkan agar tidak menimbulkan error/kesalahan.\nUntuk bagian sendmail_from diisikan dengan alamat email aktif dan valid. Apabila Anda memiliki 2 akun email yang aktif, Anda dapat mempergunakan salah satunya.\nSelepas itu, gulir ke bawah sedikit, lalu Anda akan menemukan seperti pada Table 2 berikut ini:\n\n\n\nTable 2: Direktori Pengiriman Email pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus titik koma (;) pada bagian sendmail_path, lalu isikan dengan path/direktori yang sesuai dengan direktori XAMPP pada perangkat Anda atau Anda dapat menyalin direktori berikut ini:\n\n\"\\\"C:\\xampp\\sendmail\\sendmail.exe\\\" -t\"\n\nJangan lupa untuk disimpan (CTRL + S) kemudian tutup.\nSelanjutnya, kita beralih ke folder sendmail (C:/xampp/sendmail) dan buka file sendmail.ini\nPada file tersebut, Anda akan menemukan smtp_server=mail.mydomain.com, ganti isian daripada smtp_server menjadi smtp_server=smtp.gmail.com.\nLalu, di bawahnya terdapat smtp_port=25, ganti isian daripada smtp_port menjadi smtp_port=587.\nSelanjutnya gulir ke bawah, hingga Anda menemukan error_logfile=error.log dan debug_logfile=debug.log. Hapus titik koma (;) pada bagian depan kedua kode tersebut (Lihat Figure 5)\n\n\n\n\nFigure 5: Konfigurasi Enable Error dan Debug Logfile pada File sendmail.ini\n\n\n\nSetelah itu gulir ke bawah lagi, lalu Anda akan menemukan auth_username, auth_password, dan force_sender. Khusus auth_username dan force_sender isikan dengan alamat email Anda yang aktif dan valid (Lihat Figure 6)\n\n\n\n\nFigure 6: Konfigurasi Auth & Pengirim Email pada File sendmail.ini\n\n\n\nSelanjutnya teruntuk auth_password dapat Anda isikan dengan kombinasi password 16-karakter yang Anda dapatkan dari alamat email Google Account yang Anda isikan di bagian auth_username dan force_sender. Lantas bagaimana caranya?\nPergi ke https://myaccount.google.com/. Harap diperhatikan Anda wajib menggunakan akun email yang sama dengan alamat email yang telah Anda isikan pada Langkah ke-14.\nPada laman tersebut, terdapat panel yang berada di sisi kiri layar. Dari halaman “Beranda” atau “Home” beralihlah ke halaman “Keamanan” atau “Security”. Pada halaman tersebut, gulir ke bawah lalu Anda akan menemukan “Cara Anda login ke Google” atau “How you sign in to Google”\nPada bagian tersebut, klik “Verifikasi 2 Langkah” atau “2-Step Verification”. Apabila diminta, masukkan password akun email Anda, lalu Anda akan diminta untuk memverifikasi via Gmail atau nomor telepon dengan menggunakan kode verifikasi, contoh G-123456. Harap ikuti prosedur yang ada pada laman tersebut!\nSetelah berhasil masuk, Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 7: Halaman Verifikasi 2 Langkah\n\n\n\nDi dalam halaman tersebut, gulir ke paling bawah, hingga Anda menemukan section “Sandi aplikasi” atau “App password”. Klik section tersebut, lalu Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 8: Tampilan Halaman Sandi Aplikasi\n\n\n\nPada kotak yang ada di bawah, silakan Anda membuat sandi aplikasi yang baru dengan cara mengisikan judul aplikasi yang ingin Anda buat, sebagai contoh “BK-Login”. Setelah itu, klik button “Buat”\nAkan muncul pop-up, seperti pada gambar di bawah ini (Lihat Figure 9). Pada popup tersebutlah Anda mendapatkan password 16-karakter yang dapat Anda copy dan paste dan Anda isikan ke bagian auth_password di file sendmail.ini (Lihat Figure 6)\n\n\n\n\nFigure 9: Password 16-Karakter Aplikasi Anda\n\n\n\nAnda sudah siap!\n\nPengaturan konfigurasi SMTP Anda telah siap, sekarang kita akan melanjutkan proses pembuatan halaman verifikasi kode OTP. Buat file baru dan beri nama reset-code.php, di sini kode OTP akan berperan dalam memverifikasi pembuatan password baru atau saat lupa password atau yang lainnya. Seperti apakah bentuk dari halaman tersebut? Halaman reset-code.php sangatlah sederhana sekali seperti pada gambar berikut:\n\n\n\nFigure 10: Preview Halaman Verifikasi Reset Kode OTP (reset-code.php)\n\n\nPada halaman tersebut berikan identitas pada tiap-tiap bagian. Untuk kotak input-an kode OTP berikan atribut dan value → name=\"otp\" dan untuk button “Submit” → name=\"check-reset-otp\".\nSalah satu hal yang perlu diperhatikan dalam halaman ini adalah sessions yang diambil dari alamat email yang terdaftar pada sistem. Oleh karena itu, kita perlu melampirkan sessions di atas halaman. Salin kode berikut dan letakkan di atas halaman PHP Anda:\n&lt;?php\n    $email = $_SESSION['email'];\n    if ($email == false) {\n        header('Location: login-user.php');\n    }\n?&gt;\nSetelah itu, buatlah kode untuk menampilkan informasi baik itu kode OTP telah dikirimkan melalui email atau notifikasi kemungkinan terjadinya error. Untuk penanganan error, gunakan cara/konsep yang sama seperti halnya pada halaman forgot-password.php. Sedangkan untuk menampilkan notifikasi bahwa kode OTP telah dikirimkan ke email, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n    if (isset($_SESSION['info'])) {\n?&gt;\n    &lt;div class=\"alert alert-success text-center\"&gt;\n        &lt;?php echo $_SESSION['info']; ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "12_studi_kasus_login.html#memverifikasi-akun-baru",
    "href": "12_studi_kasus_login.html#memverifikasi-akun-baru",
    "title": "Login & Registrasi Form",
    "section": "Memverifikasi Akun Baru",
    "text": "Memverifikasi Akun Baru\n\nPada bagian ini konsep yang digunakan mirip dengan bagian sebelumnya. Namun, halaman ini dibuat khusus untuk memverifikasi akun yang baru saja dibuat. Hal ini ditujukan supaya akun baru tersebut statusnya berubah dari not verified menjadi verified. Untuk tampilannya daripada halaman user-otp.php ini tidak jauh berbeda dengan yang sebelumnya. Berikut ini tampilan dari halaman tersebut:\n\n\n\nFigure 11: Preview Halaman Verifikasi Akun Baru (user-otp.php)\n\n\nJangan lupa untuk beri identitas pada tiap bagiannya. Untuk input-an kode OTP berikan name=\"otp\" dan button “Submit” dengan name=\"check\". Tidak perlu khawatir, Anda dapat menyalin semua kode Anda yang terdapat di halaman reset-code.php ke halaman user-otp.php, ini termasuk semua komponen yang ada di dalamnya! Hanya identitas saja yang perlu diubah."
  },
  {
    "objectID": "12_studi_kasus_login.html#membentuk-password-baru",
    "href": "12_studi_kasus_login.html#membentuk-password-baru",
    "title": "Login & Registrasi Form",
    "section": "Membentuk Password Baru",
    "text": "Membentuk Password Baru\n\nNew Commit"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#pengantar",
    "href": "11_studi_kasus_login_pt-1.html#pengantar",
    "title": "[Part I] - Login Form",
    "section": "Pengantar",
    "text": "Pengantar\n\nAcapkali berbagai macam situs website menawarkan kepada kita untuk bergabung sebagai komunitas, anggota, atau peserta. Sebagai contoh, LMS Kulino yang tengah kita pakai saat ini mewajibkan user-nya untuk masuk ke dalam sistem tersebut dengan menggunakan username dan password yang telah terdaftar. Apabila user belum terdaftar, maka mereka akan diarahkan menuju formulir registrasi untuk melakukan pendaftaran akun baru pada laman tersebut.\nDari formulir registrasi dan login tersebut, pada studi kasus kali ini kita akan menelaah hal-hal apa sajakah yang dibutuhkan untuk membangun komponen yang ada di dalam sistem registrasi serta login tersebut. Hal ini mencakup berbagai hal termasuk sessions, authentication, dan sebagainya di dalam modul ini. So, what are you waiting for? Let’s get started, Champ!"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#merancang-database",
    "href": "11_studi_kasus_login_pt-1.html#merancang-database",
    "title": "[Part I] - Login Form",
    "section": "Merancang Database",
    "text": "Merancang Database\n\nFirst things first, yang perlu kita persiapkan adalah database. Buatlah database baru dengan nama account. Database tersebut nantinya akan kita gunakan dalam pembuatan studi kasus kita kali ini. Setelah berhasil dibuat, kita membuat tabel dengan nama usertable yang di dalamnya memuat id, name, email, password, code, dan status. Anda dapat membuatnya secara manual atau bisa juga salin kueri SQL berikut ini:\n\nCREATE TABLE `usertable` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `name` varchar(255) NOT NULL,\n    `email` varchar(255) NOT NULL,\n    `password` varchar(255) NOT NULL,\n    `code` mediumint(50) NOT NULL,\n    `status` text NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#koneksi-ke-database",
    "href": "11_studi_kasus_login_pt-1.html#koneksi-ke-database",
    "title": "[Part I] - Login Form",
    "section": "Koneksi ke Database",
    "text": "Koneksi ke Database\n\nMasih ingat dengan prosedur pengkoneksian ke database phpMyAdmin? Ya, tentu saja, kita akan menerapkan konsep yang sama seperti studi kasus sebelumnya dalam hal ini. Namun apabila Anda lupa, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$database = \"account\";\n\n$con = new mysqli($host, $username, $password, $database);\n\nif ($con-&gt;connect_error) {\n    die(\"Connection failed: \" . $con-&gt;connect_error);\n}"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#membuat-formulir-registrasi",
    "href": "11_studi_kasus_login_pt-1.html#membuat-formulir-registrasi",
    "title": "[Part I] - Login Form",
    "section": "Membuat Formulir Registrasi",
    "text": "Membuat Formulir Registrasi\n\nLangkah awal dari studi kasus ini adalah membuat formulir registrasi. Sangat sederhana hanya membutuhkan beberapa inputan data, seperti nama lengkap, email, password, dan konfirmasi ulang password. Gunakan konsep yang sama di saat pembuatan formulir studi kasus sebelumnya. Berikan nama file registrasi tersebut dengan nama signup-user.php.\n\n\n\n\nFigure 1: Preview Halaman Registrasi (signup-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di signup-user.php\n\n\nKomponen\nValue\n\n\n\n\nNama Lengkap\nname=“name”\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nKonfirmasi Password\nname=“cpassword”\n\n\nButton Signup\nname=“signup”\n\n\n\n\nSelain itu, untuk penanganan error dari segala kemungkinan masalah yang dapat terjadi, salin kode berikut ini dengan menempatkannya setelah paragraf “Mudah. Cepat. Praktis.” dan sebelum kotak inputan pertama, yaitu Nama Lengkap.\n\n&lt;?php\n    if (count($errors) == 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    } elseif (count($errors) &gt; 1) {\n?&gt;\n    &lt;div class=\"alert alert-danger\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n        ?&gt;\n            &lt;li&gt;&lt;?php echo $showerror; ?&gt;&lt;/li&gt;\n        &lt;?php } ?&gt;\n    &lt;/div&gt;\n&lt;?php } ?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#membuat-halaman-login",
    "href": "11_studi_kasus_login_pt-1.html#membuat-halaman-login",
    "title": "[Part I] - Login Form",
    "section": "Membuat Halaman Login",
    "text": "Membuat Halaman Login\n\nSetelah halaman pendaftaran selesai dibuat, selanjutnya kita akan beralih ke halaman login (login-user.php). Pada halaman login ini cukup simple, karena kita hanya membutuhkan 2 inputan data, yaitu email dan password. Cara penyusunan halaman tersebut terbilang sama dengan halaman registrasi, yang membedakan hanya handling disaat error saja.\n\n\n\n\nFigure 2: Preview Halaman Login (login-user.php)\n\n\nSebagai identitas, berikan atribut dan value pada tiap &lt;input&gt; dengan parameter sebagai berikut:\n\nParameter Atribut di login-user.php\n\n\nKomponen\nValue\n\n\n\n\nEmail\nname=“email”\n\n\nPassword\nname=“password”\n\n\nButton Login\nname=“login”\n\n\n\n\nUntuk menangani permasalahan jika terjadi error, Anda dapat menyalin kode di bawah ini; harap letakkan kode berikut setelah paragraf “Masuk dengan email dan password Anda” dan sebelum kotak inputan email:\n\n&lt;?php\n    if (count($errors) &gt; 0) {\n?&gt;\n    &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n        &lt;?php\n            foreach ($errors as $showerror) {\n                echo $showerror;\n            }\n        ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#merancang-forgot-password",
    "href": "11_studi_kasus_login_pt-1.html#merancang-forgot-password",
    "title": "[Part I] - Login Form",
    "section": "Merancang Forgot Password",
    "text": "Merancang Forgot Password\n\nDi dalam container form login terdapat tautan “Forgot Password” atau “Lupa Kata Sandi”. Hal ini perlu kita lakukan guna apabila pengguna lupa terhadap kata sandi akun mereka. Sebelum memulai, perlu diketahui bahwa nantinya kita akan menerapkan konsep One-Time Password (OTP) untuk studi kasus ini.\nWell then, mari kita buat file baru dengan nama forgot-password.php. Konsep penyusunan halaman mengikuti alur yang sama seperti halaman-halaman sebelumnya.\n\n\n\n\nFigure 3: Preview Halaman Lupa Password (forgot-password.php)\n\n\n\nBerikan identitas pada tiap-tiap bagian, yaitu input-an alamat email dan button “Continue”. Untuk input-an email, name=\"email\"; dan button “Continue”, name=\"check-email\".\nPada halaman ini, input-an hanya berupa email dan email ini sebelumnya sudah harus terdaftar dalam sistem terlebih dahulu. Apabila email yang dimasukkan belum terdaftar, maka akan melemparkan alert atau notifikasi berupa “Akun email Anda belum terdaftar”. Praktisi dalam pembuatan kode halaman di atas dapat Anda susun sendiri atau bisa juga salin kode berikut ini:\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Forgot Password&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n            &lt;div class=\"col-md-4 offset-md-4 form\"&gt;\n                &lt;form action=\"forgot-password.php\" method=\"POST\" autocomplete=\"\"&gt;\n                    &lt;h2 class=\"text-center\"&gt;Forgot Password&lt;/h2&gt;\n                    &lt;p class=\"text-center\"&gt;Masukkan alamat email Anda&lt;/p&gt;\n                    &lt;?php\n                        if (count($errors) &gt; 0) {\n                    ?&gt;\n                        &lt;div class=\"alert alert-danger text-center\" style=\"font-weight: 600;\"&gt;\n                            &lt;?php\n                                foreach ($errors as $error) {\n                                    echo $error;\n                            }\n                            ?&gt;\n                        &lt;/div&gt;\n                    &lt;?php \n                        } \n                    ?&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Your email address\" required value=\"&lt;?php echo $email ?&gt;\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control button\" type=\"submit\" name=\"check-email\" value=\"Continue\"&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#menangani-reset-password",
    "href": "11_studi_kasus_login_pt-1.html#menangani-reset-password",
    "title": "[Part I] - Login Form",
    "section": "Menangani Reset Password",
    "text": "Menangani Reset Password\n\nSetelah pengiriman alamat email melalui halaman forgot-password.php di atas, selanjutnya kita harus memasukkan kode OTP terlebih dahulu yang di mana kode tersebut akan kita dapatkan melalui alamat email. Sebelum itu, jikalau Anda belum pernah men-setting pengaturan Simple Mail Transfer Protocol (SMTP), harap perhatikan dengan saksama penjelasan berikut ini:\n\nPergi ke dalam folder XAMPP Anda dan buka folder php\nGulir ke bawah hingga Anda menemukan file php.ini, setelah itu buka file tersebut. (Lihat Figure 4)\n\n\n\n\nFigure 4: File php.ini yang terdapat di direktori C:/xampp/php\n\n\n\nSetelah itu, klik kanan pada mouse &gt; Open with &gt; pilih Notepad\nDi dalam file php.ini tersebut, cari ‘SMTP’ dengan shortcut CTRL + F (Lihat Table 1)\n\n\n\nTable 1: Konfigurasi SMTP pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus tanda titik koma (;) pada tiap bagian-bagian yang diperlukan. Harap perhatikan dengan teliti tiap bagian yang dibutuhkan agar tidak menimbulkan error/kesalahan.\nUntuk bagian sendmail_from diisikan dengan alamat email aktif dan valid. Apabila Anda memiliki 2 akun email yang aktif, Anda dapat mempergunakan salah satunya.\nSelepas itu, gulir ke bawah sedikit, lalu Anda akan menemukan seperti pada Table 2 berikut ini:\n\n\n\nTable 2: Direktori Pengiriman Email pada File php.ini\n\n\n\n\n\n Sebelum\n\n\n Sesudah\n\n\n\n\n\nHapus titik koma (;) pada bagian sendmail_path, lalu isikan dengan path/direktori yang sesuai dengan direktori XAMPP pada perangkat Anda atau Anda dapat menyalin direktori berikut ini:\n\n\"\\\"C:\\xampp\\sendmail\\sendmail.exe\\\" -t\"\n\nJangan lupa untuk disimpan (CTRL + S) kemudian tutup.\nSelanjutnya, kita beralih ke folder sendmail (C:/xampp/sendmail) dan buka file sendmail.ini\nPada file tersebut, Anda akan menemukan smtp_server=mail.mydomain.com, ganti isian daripada smtp_server menjadi smtp_server=smtp.gmail.com.\nLalu, di bawahnya terdapat smtp_port=25, ganti isian daripada smtp_port menjadi smtp_port=587.\nSelanjutnya gulir ke bawah, hingga Anda menemukan error_logfile=error.log dan debug_logfile=debug.log. Hapus titik koma (;) pada bagian depan kedua kode tersebut (Lihat Figure 5)\n\n\n\n\nFigure 5: Konfigurasi Enable Error dan Debug Logfile pada File sendmail.ini\n\n\n\nSetelah itu gulir ke bawah lagi, lalu Anda akan menemukan auth_username, auth_password, dan force_sender. Khusus auth_username dan force_sender isikan dengan alamat email Anda yang aktif dan valid (Lihat Figure 6)\n\n\n\n\nFigure 6: Konfigurasi Auth & Pengirim Email pada File sendmail.ini\n\n\n\nSelanjutnya teruntuk auth_password dapat Anda isikan dengan kombinasi password 16-karakter yang Anda dapatkan dari alamat email Google Account yang Anda isikan di bagian auth_username dan force_sender. Lantas bagaimana caranya?\nPergi ke https://myaccount.google.com/. Harap diperhatikan Anda wajib menggunakan akun email yang sama dengan alamat email yang telah Anda isikan pada Langkah ke-14.\nPada laman tersebut, terdapat panel yang berada di sisi kiri layar. Dari halaman “Beranda” atau “Home” beralihlah ke halaman “Keamanan” atau “Security”. Pada halaman tersebut, gulir ke bawah lalu Anda akan menemukan “Cara Anda login ke Google” atau “How you sign in to Google”\nPada bagian tersebut, klik “Verifikasi 2 Langkah” atau “2-Step Verification”. Apabila diminta, masukkan password akun email Anda, lalu Anda akan diminta untuk memverifikasi via Gmail atau nomor telepon dengan menggunakan kode verifikasi, contoh G-123456. Harap ikuti prosedur yang ada pada laman tersebut!\nSetelah berhasil masuk, Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 7: Halaman Verifikasi 2 Langkah\n\n\n\nDi dalam halaman tersebut, gulir ke paling bawah, hingga Anda menemukan section “Sandi aplikasi” atau “App password”. Klik section tersebut, lalu Anda akan melihat tampilan laman seperti berikut ini:\n\n\n\n\nFigure 8: Tampilan Halaman Sandi Aplikasi\n\n\n\nPada kotak yang ada di bawah, silakan Anda membuat sandi aplikasi yang baru dengan cara mengisikan judul aplikasi yang ingin Anda buat, sebagai contoh “BK-Login”. Setelah itu, klik button “Buat”\nAkan muncul pop-up, seperti pada gambar di bawah ini (Lihat Figure 9). Pada popup tersebutlah Anda mendapatkan password 16-karakter yang dapat Anda copy dan paste dan Anda isikan ke bagian auth_password di file sendmail.ini (Lihat Figure 6)\n\n\n\n\nFigure 9: Password 16-Karakter Aplikasi Anda\n\n\n\nAnda sudah siap!\n\nPengaturan konfigurasi SMTP Anda telah siap, sekarang kita akan melanjutkan proses pembuatan halaman verifikasi kode OTP. Buat file baru dan beri nama reset-code.php, di sini kode OTP akan berperan dalam memverifikasi pembuatan password baru atau saat lupa password atau yang lainnya. Seperti apakah bentuk dari halaman tersebut? Halaman reset-code.php sangatlah sederhana sekali seperti pada gambar berikut:\n\n\n\nFigure 10: Preview Halaman Verifikasi Reset Kode OTP (reset-code.php)\n\n\nPada halaman tersebut berikan identitas pada tiap-tiap bagian. Untuk kotak input-an kode OTP berikan atribut dan value → name=\"otp\" dan untuk button “Submit” → name=\"check-reset-otp\".\nSalah satu hal yang perlu diperhatikan dalam halaman ini adalah sessions yang diambil dari alamat email yang terdaftar pada sistem. Oleh karena itu, kita perlu melampirkan sessions di atas halaman. Salin kode berikut dan letakkan di atas halaman PHP Anda:\n&lt;?php\n    $email = $_SESSION['email'];\n    if ($email == false) {\n        header('Location: login-user.php');\n    }\n?&gt;\nSetelah itu, buatlah kode untuk menampilkan informasi baik itu kode OTP telah dikirimkan melalui email atau notifikasi kemungkinan terjadinya error. Untuk penanganan error, gunakan cara/konsep yang sama seperti halnya pada halaman forgot-password.php. Sedangkan untuk menampilkan notifikasi bahwa kode OTP telah dikirimkan ke email, Anda dapat menyalin kode berikut ini:\n\n&lt;?php\n    if (isset($_SESSION['info'])) {\n?&gt;\n    &lt;div class=\"alert alert-success text-center\"&gt;\n        &lt;?php echo $_SESSION['info']; ?&gt;\n    &lt;/div&gt;\n&lt;?php\n    }\n?&gt;"
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#memverifikasi-akun-baru",
    "href": "11_studi_kasus_login_pt-1.html#memverifikasi-akun-baru",
    "title": "[Part I] - Login Form",
    "section": "Memverifikasi Akun Baru",
    "text": "Memverifikasi Akun Baru\n\nPada bagian ini konsep yang digunakan mirip dengan bagian sebelumnya. Namun, halaman ini dibuat khusus untuk memverifikasi akun yang baru saja dibuat. Hal ini ditujukan supaya akun baru tersebut statusnya berubah dari not verified menjadi verified. Untuk tampilan daripada halaman user-otp.php ini tidak jauh berbeda dengan yang sebelumnya. Berikut ini tampilan dari halaman tersebut:\n\n\n\nFigure 11: Preview Halaman Verifikasi Akun Baru (user-otp.php)\n\n\nJangan lupa untuk beri identitas pada tiap bagiannya. Untuk input-an kode OTP berikan name=\"otp\" dan button “Submit” dengan name=\"check\". Tidak perlu khawatir, Anda dapat menyalin semua kode Anda yang terdapat di halaman reset-code.php ke halaman user-otp.php, ini termasuk semua komponen yang ada di dalamnya! Hanya identitas saja yang perlu diubah."
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#membentuk-password-baru",
    "href": "11_studi_kasus_login_pt-1.html#membentuk-password-baru",
    "title": "[Part I] - Login Form",
    "section": "Membentuk Password Baru",
    "text": "Membentuk Password Baru\n\nSaat ini, pengaturan dari SMTP kita telah siap untuk dieksekusi. Kita akan meneruskan perjalanan dengan pembuatan kata sandi atau password baru. Di dalamnya terdapat 2 (dua) input-an, yaitu password baru dan konfirmasi ulang password baru. Selain itu, juga ada button “Change” untuk memvalidasi aksi pengubahan password kita tadi. Berikan file ini dengan nama new-password.php dan berikut merupakan tampilan halamannya:\n\n\n\nFigure 11: Preview Halaman Password Baru (new-password.php)\n\n\nBerikan identitas pada masing-masing bagian. Untuk input-an password baru beri atribut name=\"password\" dan input-an konfirmasi ulang password baru, yaitu name=\"cpassword\". Sedangkan untuk button “Change”, berikan name=\"change-password\". Pastikan pula di halaman ini memiliki kode PHP yang berupa email sessions, notifikasi perintah, dan penanganan error yang sama seperti pada halaman reset-code.php."
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#memverifikasi-akun-baru",
    "href": "12_studi_kasus_login_pt-2.html#memverifikasi-akun-baru",
    "title": "[Part II] - Login Form",
    "section": "Memverifikasi Akun Baru",
    "text": "Memverifikasi Akun Baru\n\nPada bagian ini, konsep yang digunakan mirip dengan bagian sebelumnya. Namun, halaman ini dibuat khusus untuk memverifikasi akun yang baru saja dibuat. Hal ini ditujukan supaya akun baru tersebut statusnya berubah dari not verified menjadi verified. Untuk tampilan daripada halaman user-otp.php ini tidak jauh berbeda dengan yang sebelumnya. Berikut ini tampilan dari halaman tersebut:\n\n\n\nFigure 1: Preview Halaman Verifikasi Akun Baru (user-otp.php)\n\n\nJangan lupa untuk beri identitas pada tiap bagiannya. Untuk input-an kode OTP berikan name=\"otp\" dan button “Submit” dengan name=\"check\". Tidak perlu khawatir, Anda dapat menyalin semua kode Anda yang terdapat di halaman reset-code.php ke halaman user-otp.php, ini termasuk semua komponen yang ada di dalamnya! Hanya identitas saja yang perlu diubah."
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#membentuk-password-baru",
    "href": "12_studi_kasus_login_pt-2.html#membentuk-password-baru",
    "title": "[Part II] - Login Form",
    "section": "Membentuk Password Baru",
    "text": "Membentuk Password Baru\n\nSaat ini, pengaturan dari SMTP kita telah siap untuk dieksekusi. Kita akan meneruskan perjalanan dengan pembuatan kata sandi atau password baru. Di dalamnya terdapat 2 (dua) input-an, yaitu password baru dan konfirmasi ulang password baru. Selain itu, juga ada button “Change” untuk memvalidasi aksi pengubahan password kita tadi. Berikan file ini dengan nama new-password.php dan berikut merupakan tampilan halamannya:\n\n\n\nFigure 2: Preview Halaman Password Baru (new-password.php)\n\n\nBerikan identitas pada masing-masing bagian. Untuk input-an password baru beri atribut name=\"password\" dan input-an konfirmasi ulang password baru, yaitu name=\"cpassword\". Sedangkan untuk button “Change”, berikan name=\"change-password\". Pastikan pula di halaman ini memiliki kode PHP yang berupa email sessions, notifikasi perintah, dan penanganan error yang sama seperti pada halaman reset-code.php."
  },
  {
    "objectID": "11_studi_kasus_login_pt-1.html#akhir-bagian-i",
    "href": "11_studi_kasus_login_pt-1.html#akhir-bagian-i",
    "title": "[Part I] - Login Form",
    "section": "Akhir Bagian I",
    "text": "Akhir Bagian I\n\nSelamat Anda telah berhasil menyusun studi kasus hingga pada tahap ini! Harap diingat perjalanan kita masih panjang. Silakan melanjutkan praktik studi kasus ini ke Bagian II. Break a leg, Champ!"
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#melompat-untuk-login-sekarang",
    "href": "12_studi_kasus_login_pt-2.html#melompat-untuk-login-sekarang",
    "title": "[Part II] - Login Form",
    "section": "Melompat untuk Login Sekarang",
    "text": "Melompat untuk Login Sekarang\n\nSetelah kita mengubah password lama kita menjadi yang baru, kita diwajibkan untuk login ke dalam akun kita untuk memastikan bahwasannya kata sandi kita betul-betul telah berhasil diubah. Oleh karena itu, selanjutnya kita akan membuat suatu halaman yang dapat dibilang hanya berupa notifikasi bahwa password kita berhasil diubah dan button “Login Now” saja. Berikan nama file halaman ini dengan judul password-changed.php. Berikut tampilan daripada halaman tersebut:\n\n\n\nFigure 3: Preview Halaman Notifikasi Password Berhasil Diubah (password-changed.php)\n\n\nHalaman ini dapat dikatakan mudah dalam menyusun komponen-komponen yang ada di dalamnya. Anda dapat berkreasi sendiri sesuai dengan inovasi Anda atau dapat juga salin kode berikut ini untuk membuat halaman password-changed.php:\n&lt;?php\n    if ($_SESSION['info'] == false) {\n        header('Location: login-user.php');\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Login Form&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n            &lt;div class=\"col-md-4 offset-md-4 form login-form\"&gt;\n                &lt;?php\n                if (isset($_SESSION['info'])) {\n                ?&gt;\n                    &lt;div class=\"alert alert-success text-center\" style=\"font-weight: 600; font-size: 15px;\"&gt;\n                        &lt;?php echo $_SESSION['info']; ?&gt;\n                    &lt;/div&gt;\n                &lt;?php\n                }\n                ?&gt;\n                &lt;form action=\"login-user.php\" method=\"POST\"&gt;\n                    &lt;div class=\"form-group\"&gt;\n                        &lt;input class=\"form-control button\" type=\"submit\" name=\"login-now\" value=\"Login Now\"&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#selamat-datang-di-beranda-website",
    "href": "12_studi_kasus_login_pt-2.html#selamat-datang-di-beranda-website",
    "title": "[Part II] - Login Form",
    "section": "Selamat Datang di Beranda Website",
    "text": "Selamat Datang di Beranda Website\n\nSetelah melewati berbagai lika-liku pembuatan sistem login serta registrasi akun, sampailah kita pada halaman beranda atau homepage atau landing page atau dashboard atau sebutan yang lainnya. Dikarenakan judul studi kasus ini hanyalah berupa modul login form, pada halaman ini, Anda bebas mengutarakan kreativitas serta inovasi Anda dalam mengkombinasikan dengan ide proyek milik Anda sendiri.\nSebagai sarana pendukung modul pembelajaran, pada halaman ini intinya adalah bagaimana kita mengakhiri sessions atau log out dari sistem. Namun sebelum itu, Anda tidak bisa serta merta baru saja masuk langsung keluar. Anda harus melewati halaman beranda atau home dulu setidaknya untuk keluar. Lazimnya, terdapat button “Keluar” atau “Log Out” yang acapkali kita jumpai di suatu halaman website.\nKendati demikian, kita akan memberikan contoh halaman dari home.php yang di mana terdapat button untuk log out dari situs tersebut. Berikut cuplikan sederhana dari halaman tersebut:\n\n\n\nFigure 4: Preview Halaman Beranda (home.php)\n\n\nPada halaman di atas, button “Log Out” tersebut hanya merujuk untuk keluar dari sistem. Jadi, apabila button di-klik akan mengembalikkan kita ke halaman login form di awal. Namun, perlu diketahui di halaman home.php ada beberapa kode PHP yang perlu ditambahkan di atas konten HTML, yaitu berikut ini:\n&lt;?php\n    // SESSIONS FOR EACH ACCOUNTS\n    $email = $_SESSION['email'];\n    $password = $_SESSION['password'];\n\n    // JIKA EMAIL DAN PASSWORD SALAH\n    // JIKA BELUM ADA SESSION DARI EMAIL DAN PASSWORD\n    if ($email != false && $password != false) {\n        $sql = \"SELECT * FROM usertable WHERE email = '$email'\";\n        $run_Sql = mysqli_query($con, $sql);\n        if ($run_Sql) {\n            $fetch_info = mysqli_fetch_assoc($run_Sql);\n            $status = $fetch_info['status'];\n            $code = $fetch_info['code'];\n            if ($status == \"verified\") {\n                if ($code != 0) {\n                    header('Location: reset-code.php');\n                }\n            } else {\n                header('Location: user-otp.php');\n            }\n        }\n    } else {\n        header('Location: login-user.php');\n    }\n?&gt;\nSeperti yang lainnya, letakkan kode tersebut paling atas dari halaman PHP. Amati tiap conditional sentences yang ada pada source code di atas dan tariklah kesimpulan! Jikalau Anda mendapati kejanggalan “Dari mana variabel atau bahkan isian variabel ini berasal?”. Tenang, tak perlu cemas karena kita akan membangun controller dari keseluruhan sistem yang tengah kita bangun ini."
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#menuju-pintu-keluar",
    "href": "12_studi_kasus_login_pt-2.html#menuju-pintu-keluar",
    "title": "[Part II] - Login Form",
    "section": "Menuju Pintu Keluar",
    "text": "Menuju Pintu Keluar\n\nApabila kita merujuk pada halaman home.php pada section sebelumnya, button “Log Out” berisikan tag &lt;a&gt; yang memuat atribut href=\"logout-user.php\". Oleh karena itu, selanjutnya yang akan kita lakukan adalah membuat file baru yang kita beri nama logout-user.php. Sangatlah mudah, Anda hanya perlu menyalin kode berikut ini dan tempelkan pada file logout-user.php:\n&lt;?php\n    session_start();\n    session_unset();\n    session_destroy();\n    header('location: login-user.php');\n?&gt;"
  },
  {
    "objectID": "12_studi_kasus_login_pt-2.html#kontroler-sistem",
    "href": "12_studi_kasus_login_pt-2.html#kontroler-sistem",
    "title": "[Part II] - Login Form",
    "section": "Kontroler Sistem",
    "text": "Kontroler Sistem\n\nPendahuluan\n\nDi dunia web development, controller adalah sebuah bagian dari sebuah framework atau kerangka kerja aplikasi web yang bertugas mengatur dan mengelola permintaan (request) serta respon (response) antara interaksi pengguna dan aplikasi web.\nSebuah controller biasanya bertanggung jawab untuk menerima permintaan dari pengguna melalui URL, mengolah permintaan tersebut, memproses data yang dibutuhkan dari model, dan me-render (menampilkan) tampilan (view) yang sesuai kepada pengguna sebagai respon. Contoh framework yang menggunakan konsep controller adalah Laravel, Express.js, Django, dan masih banyak lagi.\nDalam pengembangan aplikasi web, penggunaan controller sangat membantu dalam membagi tugas-tugas yang berbeda, seperti tampilan, logika bisnis, dan pengolahan data. Hal ini memudahkan pengembang untuk memelihara dan memperbarui aplikasi web secara efisien dan terstruktur. Bagaimana, apakah Anda sudah paham akan konsep dari controller? Jika sudah, let’s dig deeper into the world of controllers!\n\n\n\nC0 – Langkah Awal\n\nFirstly, buatlah file PHP baru dan beri nama controllerUserData.php. Kemudian, buat kode PHP di dalamnya dengan tag &lt;?php ?&gt;. Di dalam file ini, sepenuhnya kita akan membuat fungsi-fungsi procedural yang di mana akan berperan dalam merespon segala tindakan pengguna ke dalam sistem aplikasi. Di bagian awal atau atas file ini, salin kode berikut pada file controllerUserData.php Anda:\n&lt;?php\nsession_start();\nrequire \"connection.php\";\n$email = \"\";\n$name = \"\";\n$errors = array();\n\n// [ANOTHER OPTION] REGULAR EXPRESSION FOR EMAIL VALIDATION\n// PREREQUISITE MATA KULIAH OTOMATA & TEORI BAHASA\n$pattern = '/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/';\nSecara singkat, fungsi session_start() dalam bahasa PHP digunakan untuk memulai atau mengaktifkan sesi pada script PHP. Session adalah suatu cara untuk menyimpan data pengguna antara beberapa permintaan halaman web. Ini memungkinkan kita untuk menyimpan informasi seperti variabel, input-an data pengguna, atau data lainnya yang perlu dipertahankan selama pengguna berinteraksi dengan situs web Anda.\n\n\n\nC1 – Bagian Pendaftaran Akun\n\nMasih di dalam file controllerUserData.php, selanjutnya kita akan membuat controller pada saat di bagian pendaftaran akun. Berikut adalah source code dari controller program tersebut:\n// DIGUNAKAN UNTUK PEMBUATAN AKUN PERTAMA KALI [SIGNUP-USER.PHP]\n// PROSES PENGIRIMAN DATA [SIGNUP BUTTON]\nif (isset($_POST['signup'])) {\n    $name = mysqli_real_escape_string($con, $_POST['name']);\n    $email = mysqli_real_escape_string($con, $_POST['email']);\n    $password = mysqli_real_escape_string($con, $_POST['password']);\n    $cpassword = mysqli_real_escape_string($con, $_POST['cpassword']);\n\n    // DIGUNAKAN UNTUK MEMVALIDASI APAKAH EMAIL VALID ATAU TIDAK\n    if (filter_var($email, FILTER_VALIDATE_EMAIL) === FALSE) {\n        $errors['email'] = \"Harap masukkan alamat email yang benar!\";\n    }\n\n    // DIGUNAKAN UNTUK MEMVERIFIKASI APAKAH ANTARA PASSWORD DAN KONFIRMASI PASSWORD SAMA\n    if ($password !== $cpassword) {\n        $errors['password'] = \"Konfirmasi kata sandi Anda tidak cocok!\";\n    }\n\n    // DIGUNAKAN UNTUK MENEGECEK APAKAH EMAIL SUDAH TERDAFTAR/BELUM SEBELUMNYA\n    // (*) =&gt; Merupakan simbol ASTERISK atau BINTANG KECIL\n    $email_check = \"SELECT * FROM usertable WHERE email = '$email'\";\n    $res = mysqli_query($con, $email_check);\n    if (mysqli_num_rows($res) &gt; 0) {\n        $errors['email'] = \"Alamat email Anda sudah terdaftar!\";\n    }\n\n    // PROSES INPUT DATA BARU KE DATABASE\n    if (count($errors) === 0) {\n        // Meng-enkripsi atau mengcover password\n        $encpass = password_hash($password, PASSWORD_BCRYPT);\n        // Fungsi generate random integer atau serangkaian angka acak\n        $code = rand(999999, 111111); // Min = 999999; Max = 111111\n        $status = \"notverified\";\n        $insert_data = \"INSERT INTO usertable (name, email, password, code, status)\n                        values('$name', '$email', '$encpass', '$code', '$status')\";\n        $data_check = mysqli_query($con, $insert_data);\n\n        // DIGUNAKAN UNTUK MEM-VERIFIKASI STATUS AKUN DENGAN KODE OTP\n        // DIBUTUHKAN FUNGSI MAIL DELIVIER (SMTP) UNTUK MENGIRIM EMAIL\n        if ($data_check) {\n            $subject = \"Kode Verifikasi Email\"; // Subjek email\n            $message = \"Kode verifikasi Anda adalah $code\"; // Isi pesan email\n            // ! ALAMAT EMAIL WAJIB SAMA DENGAN SETTING-AN SMTP !\n            $sender = \"From: emailaktif@gmail.com\"; // Pengirim email\n            // PENGIRIMAN KODE OTP VIA EMAIL\n            if (mail($email, $subject, $message, $sender)) {\n                $info = \"Kami telah mengirimkan kode verifikasi ke email Anda - $email\";\n                $_SESSION['info'] = $info;\n                $_SESSION['email'] = $email;\n                $_SESSION['password'] = $password;\n                header('location: user-otp.php');\n                exit();\n                // HANDLING ERROR KODE OTP\n            } else {\n                $errors['otp-error'] = \"Terjadi kesalahan saat mengirim kode OTP!\";\n            }\n        // HANDLING ERROR INSERT INTO DATABASE\n        } else {\n            $errors['db-error'] = \"Gagal menambahkan data ke database!\";\n        }\n    }\n}\n\n\nAlgoritma dari procedural tersebut dimulai apabila terdapat aksi dari user di saat melakukan registrasi akun dengan menekan button “Sign Up”. Jadi, setelah terdapat 4 buah inputan data yang masuk akan melalui serangkaian proses verifikasi serta validasi terlebih dahulu. Di antaranya ada validasi alamat email, konfimasi kecocokan password, mengecek apakah alamat email sudah terdaftar atau belum, enkripsi password, dan melakukan pengiriman kode OTP via email.\nAnda dapat mengamati serta memodifikasi tiap-tiap kode di atas agar dapat mengetahui apa saja perbedaan respon yang diberikan jikalau Anda mengubahnya. Contohnya, Anda dapat mengubah kode validasi email dengan variabel $pattern yang ada di section C0 – Langkah Awal. Namun, setidaknya untuk menggunakan variabel tersebut, Anda perlu mengetahui rangkaian karakter, angka, serta simbol yang digunakan dalam memvalidasi alamat email. Hal ini bisa Anda dapatkan dari mata kuliah Otomata & Teori Bahasa di kampus.\n\n\n\nC2 – Memverifikasi Akun Baru\n\nMasih di dalam file yang sama, kita akan meneruskan perjalanan kita setelah membuat akun dengan memverifikasi akun yang baru saja dibuat oleh user. Perhatikan source code yang ada di bawah ini:\n// PROSES VERIFIKASI KODE OTP [USER-OTP.PHP]\n// DIGUNAKAN UNTUK MEMVERIFIKASI AKUN MELALUI KODE OTP YANG TELAH DIKIRIMKAN VIA EMAIL\nif (isset($_POST['check'])) {\n    // DIGUNAKAN UNTUK MENAMPILKAN NOTIFIKASI SUKSES ATAUPUN ERROR\n    $_SESSION['info'] = \"\";\n\n    // DATA YANG DIKIRIM OLEH USER MELALUI INPUTAN BOX OTP [USER-OTP.PHP]\n    $otp_code = mysqli_real_escape_string($con, $_POST['otp']);\n    $check_code = \"SELECT * FROM usertable WHERE code = $otp_code\";\n    $code_res = mysqli_query($con, $check_code);\n\n    // ALGORITMA PEMROSESAN DARI 'NOTVERIFIED' KE 'VERIFIED'\n    if (mysqli_num_rows($code_res) &gt; 0) {\n        // MENGAMBIL DATA DARI SQL\n        $fetch_data = mysqli_fetch_assoc($code_res);\n        // MEMUAT DATA KODE SQL\n        $fetch_code = $fetch_data['code'];\n        $email = $fetch_data['email'];\n\n        // INISIASI APABILA BERHASIL TERVERIFIKASI, KODE MENJADI 0 SELAIN ITU GAGAL\n        $code = 0;\n        $status = 'verified';\n        $update_otp = \"UPDATE usertable SET code = $code, status = '$status' WHERE code = $fetch_code\";\n        $update_res = mysqli_query($con, $update_otp);\n        if ($update_res) {\n            $_SESSION['name'] = $name;\n            $_SESSION['email'] = $email;\n            header('location: home.php');\n            exit();\n        } else {\n            $errors['otp-error'] = \"Terjadi kesalahan saat memperbarui kode OTP!\";\n        }\n    } else {\n        $errors['otp-error'] = \"Kode OTP yang Anda masukkan salah!\";\n    }\n}\nPemrosesan verifikasi akun melalui beberapa tahap, yaitu memperbarui kode OTP yang terdapat di phpMyAdmin serta mencocokan antara kode OTP input-an user (didapat dari email) dengan kode yang ada di database. Yang menjadi tolak ukur terverifikasinya suatu akun adalah apabila tiap alamat email yang memiliki kode 0, maka akun dengan alamat email tersebut sudah terverifikasi, selain itu belum. Sangat mudah, bukan?\n\n\n\nC3 – Masuk ke Dalam Sistem\n\nSelanjutnya setelah membuat controller verifikasi akun, kita akan membuat untuk yang lainnya, yaitu login. Halaman ini, memuat beberapa conditional cases, seperti apakah bentuknya? Mari kita simak melalui source code berikut ini:\n// APABILA USER AKAN LOGIN [LOGIN BUTTON]\n// MASUK KE DALAM SISTEM [LOGIN-USER.PHP]\nif (isset($_POST['login'])) {\n    $email = mysqli_real_escape_string($con, $_POST['email']);\n    $password = mysqli_real_escape_string($con, $_POST['password']);\n\n    // DIGUNAKAN APABILA ALAMAT EMAIL BELUM TERDAFTAR\n    // MENGECEK EMAIL DARI DATABASE\n    $check_email = \"SELECT * FROM usertable WHERE email = '$email'\";\n    $res = mysqli_query($con, $check_email);\n\n    // #1 - APAKAH EMAIL SUDAH TERDAFTAR?\n    if (mysqli_num_rows($res) &gt; 0) {\n        $fetch = mysqli_fetch_assoc($res);\n        $fetch_pass = $fetch['password'];\n\n        // #2 - APAKAH EMAIL DAN ATAU PASSWORD YANG DIINPUTKAN BENAR?\n        if (password_verify($password, $fetch_pass)) {\n            $_SESSION['email'] = $email;\n            $status = $fetch['status'];\n            \n            // #3 - APAKAH AKUN SUDAH TERVERIFIKASI?\n            if ($status == 'verified') {\n                $_SESSION['email'] = $email;\n                $_SESSION['password'] = $password;\n                header('location: home.php');\n            } else {\n                $info = \"Sepertinya kamu belum memverifikasi emailmu, nih - $email\";\n                $_SESSION['info'] = $info;\n                header('location: user-otp.php');\n            }\n        } else {\n            $errors['email'] = \"Alamat email atau password salah!\";\n        }\n    } else {\n        $errors['email'] = \"Sepertinya Anda belum terdaftar sebagai member! Daftar melalui link di bawah ini.\";\n    }\n}\nDi dalam script, Anda bisa mengobservasi bahwasannya terdapat beberapa kondisi; jika ini, maka demikian, ini dikarenakan untuk dapat menangani kasus-kasus di saat situasi-situasi tertentu. Misalnya, apa yang harus dilakukan apabila suatu saat ternyata user memasukkan alamat email yang ternyata belum terdaftar pada sistem. Contoh lainnya, apa yang harus dilakukan apabila password dan/atau email yang dimasukkan oleh user salah? Nah, demikianlah peran dari tiap-tiap nested if-else statement di atas. Amati dan tariklah kesimpulan!\n\n\n\nC4 – Lupa Kata Sandi\n\nAcapkali kita lupa akan kata sandi suatu akun terlebih kita memiliki puluhan akun dengan kombinasi password tiap akun berbeda. Oleh karena itu, kita harus membangun controller yang di mana dapat memungkinkan kita untuk mengubah password lama dengan yang baru. Salin kode berikut ini ke dalam file controller Anda (controllerUserData.php):\n// APABILA USER LUPA PASSWORD [FORGOT PASSWORD LINK]\n// NB: AKSI MELAKUKAN KLIK \"CONTINUE\" BUTTON [FORGOT-PASSWORD.PHP]\nif (isset($_POST['check-email'])) {\n    $email = mysqli_real_escape_string($con, $_POST['email']);\n    $check_email = \"SELECT * FROM usertable WHERE email='$email'\";\n    $run_sql = mysqli_query($con, $check_email);\n\n    if (mysqli_num_rows($run_sql) &gt; 0) {\n        // KODE OTP BARU\n        // SEBAGAI SYARAT UNTUK MENGUBAH PASSWORD\n        $code = rand(999999, 111111);\n        $insert_code = \"UPDATE usertable SET code = $code WHERE email = '$email'\";\n        $run_query = mysqli_query($con, $insert_code);\n\n        if ($run_query) {\n            $subject = \"Kode Reset Password\"; // Subjek email\n            $message = \"Kode reset password Anda adalah $code\"; // Isi email\n            $sender = \"From: emailaktif@gmail.com\"; // Pengirim email\n            \n            if (mail($email, $subject, $message, $sender)) {\n                $info = \"Kami telah mengirimkan OTP reset kata sandi ke email Anda - $email\";\n                $_SESSION['info'] = $info;\n                $_SESSION['email'] = $email;\n                header('location: reset-code.php');\n                exit();\n            } else {\n                $errors['otp-error'] = \"Terjadi kesalahan saat mengirim kode!\";\n            }\n        } else {\n            $errors['db-error'] = \"Whoops.. ada sesuatu yang salah!\";\n        }\n    } else {\n        $errors['email'] = \"Sepertinya email tersebut belum terdaftar, nih!\";\n    }\n}\nDi saat lupa password, user akan diminta untuk memasukkan alamat email akun mereka. Kemudian, sistem mulai bekerja dengan mengecek kembali apakah email sudah terdaftar dan sebagainya. Jika Anda mengamati dengan saksama, konsep yang dipakai sama seperti dengan fungsi-fungsi procedural sebelumnya. Di sini pula, kita akan membentuk suatu kode OTP baru guna verifikasi perubahan kata sandi dari yang lama menjadi baru. Ini memiliki kesinambungan dengan controller yang akan kita bahas selanjutnya.\n\n\n\nC5 – Kode OTP untuk Password Baru\n\nPada verifikasi kode OTP yang digunakan untuk reset password ini dapat dikatakan sangat mudah. Kita hanya perlu memuat session dari email dari melakukan proses verifikasi terhadap kecocokan kode OTP yang telah dikirimkan melalui alamat email. Berikut source code dari controller tersebut:\n// MEMVERIFIKASI KODE OTP KHUSUS UNTUK PASSWORD BARU\n// AKSI YANG DILAKUKAN SAAT MEMINTA RESET PASSWORD [RESET-CODE.PHP]\nif (isset($_POST['check-reset-otp'])) {\n    $_SESSION['info'] = \"\";\n    $otp_code = mysqli_real_escape_string($con, $_POST['otp']);\n    $check_code = \"SELECT * FROM usertable WHERE code = $otp_code\";\n    $code_res = mysqli_query($con, $check_code);\n    \n    if (mysqli_num_rows($code_res) &gt; 0) {\n        $fetch_data = mysqli_fetch_assoc($code_res);\n        $email = $fetch_data['email'];\n        $_SESSION['email'] = $email;\n        $info = \"Silakan buat kata sandi baru yang tidak Anda gunakan di situs lain.\";\n        $_SESSION['info'] = $info;\n        header('location: new-password.php');\n        exit();\n    } else {\n        $errors['otp-error'] = \"Kode OTP yang Anda masukkan salah!\";\n    }\n}\nDikarenakan dari awal kita sudah menyinggung controller yang satu ini khusus reset password, ini memiliki makna bahwa alamat email user sudah terdaftar pada sistem. Oleh karenanya, kemungkinan terjadi kondisi-kondisi tertentu sangatlah sedikit. Ini disebabkan ruang lingkup dari controller ini hanya membatasi untuk memverifikasi kode OTP yang diberikan. Penanganan masalah daripada halaman ini hanya berkisar di saat user salah memasukkan kode OTP.\n\n\n\nC6 – Membuat Password Baru\n\nSaat ini kita akan memasuki proses pembuatan password baru. Seperti yang kita ketahui, setelah kita mendapat izin dengan verifikasi kode OTP, kita diberikan kewenangan untuk mengubah kata sandi pada akun kita. Kita akan menggabungkan beberapa komponen-komponen seperti yang telah kita lakukan pada controller sebelumnya. Simak source code berikut:\n// MENGGANTI PASSWORD YANG LAMA DENGAN YANG BARU\n// AKSI DILAKUKAN DENGAN BUTTON \"CHANGE PASSWORD\" [NEW-PASSWORD.PHP]\nif (isset($_POST['change-password'])) {\n    $_SESSION['info'] = \"\";\n    $password = mysqli_real_escape_string($con, $_POST['password']);\n    $cpassword = mysqli_real_escape_string($con, $_POST['cpassword']);\n\n    if ($password !== $cpassword) {\n        $errors['password'] = \"Konfirmasi kata sandi Anda tidak cocok!\";\n    } else {\n        $code = 0;\n        $email = $_SESSION['email'];\n        $encpass = password_hash($password, PASSWORD_BCRYPT);\n        $update_pass = \"UPDATE usertable SET code = $code, password = '$encpass' WHERE email = '$email'\";\n        $run_query = mysqli_query($con, $update_pass);\n        \n        if ($run_query) {\n            $info = \"Kata sandi Anda berhasil diubah. Sekarang Anda dapat login dengan kata sandi yang baru.\";\n            $_SESSION['info'] = $info;\n            header('Location: password-changed.php');\n        } else {\n            $errors['db-error'] = \"Gagal untuk mengubah kata sandi Anda!\";\n        }\n    }\n}\nJadi, nantinya user akan memasukkan kata sandi mereka yang baru. Kemudian, akan dilakukan kecocokan antara password dan konfirmasi ulang password. Jika sesuai, akan dieksekusi perintah SQL untuk meng-update kode user menjadi 0 dan password yang tentunya sudah dienkripsi. Setelah itu, user akan diarahkan untuk masuk ke dalam sistem (login) dengan ditampilkannya halaman notifikasi bahwa kata sandi berhasil diubah.\n\n\n\nC7 – Masuk Kembali dengan Password Baru\n\nDikarenakan halaman berikutnya setelah mengubah password hanya berupa halaman notifikasi, kita hanya perlu script singkat seperti berikut ini:\n// CONTROLLER UNTUK [PASSWORD-CHANGED.PHP]\nif (isset($_POST['login-now'])) {\n    header('Location: login-user.php');\n}\n\n\n\nC8 – Modifikasi Beberapa Halaman\n\nSelamat! Kita telah berhasil membangun kontroler untuk sistem login ini. Pada akhirnya kita akan segera menyelesaikan proyek studi kasus kita kali ini. Hanya tinggal sentuhan terakhir untuk menyempurnakan proyek ini, yaitu dengan salin kode berikut:\n&lt;?php require_once \"controllerUserData.php\"; ?&gt;\nSalin kode di atas dan letakkan pada 8 (delapan) file berikut ini:\n\nforgot-password.php\nhome.php\nlogin-user.php\nnew-password.php\npassword-changed.php\nreset-code.php\nsignup-user.php\nuser-otp.php\n\nHarap letakkan kode tersebut PALING ATAS DI DALAM TIAP-TIAP FILE! Ini ditujukan agar controller dapat memainkan perannya dengan baik. Selamat, Anda telah berhasil!"
  }
]